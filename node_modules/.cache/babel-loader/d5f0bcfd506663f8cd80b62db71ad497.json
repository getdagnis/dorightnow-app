{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskList/TaskList.js\";\nimport React from \"react\";\nimport \"./TaskList.css\";\nimport Task from \"../Task/Task\";\n\nconst TaskList = props => {\n  const {\n    tasks\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.length > 0 ? tasks.map(t => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        type: \"todo\",\n        task: t.task,\n        cat: t.cat\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 18\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"no-tasks\",\n      children: \"No tasks added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskList/TaskList.js"],"names":["React","Task","TaskList","props","tasks","length","map","t","task","cat","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGC,KAAK,CAACC,MAAN,GAAe,CAAf,GACCD,KAAK,CAACE,GAAN,CAAWC,CAAD,IAAO;AACf,0BAAO,QAAC,IAAD;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAEA,CAAC,CAACC,IAArC;AAA2C,QAAA,GAAG,EAAED,CAAC,CAACE;AAAlD,SAAWF,CAAC,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CADD,gBAKC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbD;;KAAMR,Q;AAeN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport \"./TaskList.css\";\nimport Task from \"../Task/Task\";\n\nconst TaskList = (props) => {\n  const { tasks } = props;\n  return (\n    <div className=\"task-list\">\n      {tasks.length > 0 ? (\n        tasks.map((t) => {\n          return <Task key={t.id} type=\"todo\" task={t.task} cat={t.cat} />;\n        })\n      ) : (\n        <h3 className=\"no-tasks\">No tasks added</h3>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}