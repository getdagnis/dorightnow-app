{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Animated } from \"react-animated-css\";\nimport Countdown from \"react-countdown\";\nimport ReactStopwatch from \"react-stopwatch\";\nimport { TasksContext } from \"../../context/context\";\nimport \"./MainTask.css\";\nimport \"./MainTask.anim.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  _s();\n\n  const {\n    mainTask,\n    taskSize\n  } = props;\n  const {\n    state,\n    dispatch\n  } = useContext(TasksContext);\n  const {\n    mainTaskMovement\n  } = state;\n  const [isMainTaskVisible, setIsMainTaskVisible] = useState(true);\n  const [notesVisible, setNotesVisible] = useState(false);\n  const [mainTaskAnim, setMainTaskAnim] = useState({\n    anim: \"mainTaskDoneSimple\",\n    duration: 1200\n  });\n  let classList = \"main-task \" + taskSize;\n  classList = mainTask.color !== \"0\" ? classList.concat(\" main-task-color-\" + mainTask.color) : classList;\n  classList = notesVisible ? classList.concat(\" main-task-with-notes\") : classList;\n  const mainBtnColor = \"xxl-done btn-\" + mainTask.color;\n\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n\n    default:\n      return null;\n  }\n\n  const Completionist = () => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"You missed the deadline!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 31\n  }, this);\n\n  const countdownRenderer = ({\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(Completionist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countdown-units\",\n          children: [hours, \"h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countdown-units\",\n          children: [minutes, \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countdown-units\",\n          children: [seconds, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-task-h1\",\n        children: \"do right now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-task-with-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Animated, {\n          animationOut: mainTaskAnim.anim,\n          animationOutDuration: mainTaskAnim.duration,\n          isVisible: isMainTaskVisible,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notes-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classList,\n              onClick: () => {\n                setNotesVisible(!notesVisible); // dispatch({\n                //   type: \"HIDE_LEFT_SIDE\",\n                //   payload: \"toggle\",\n                // });\n                // dispatch({\n                //   type: \"HIDE_RIGHT_SIDE\",\n                //   payload: \"toggle\",\n                // });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: mainTask.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: notesVisible ? \"main-task-notes notes-visible\" : \"main-task-notes\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"subtask-h4\",\n                children: \"+ Add a new subtask... \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), \"Doesn't work yet...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: notesVisible ? \"main-btns-hide\" : \"main-btns-show\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-task-btns\",\n            children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: () => {\n                setMainTaskAnim({\n                  anim: \"mainTaskOut\",\n                  duration: 1500\n                });\n                setIsMainTaskVisible(false);\n                setTimeout(() => {\n                  dispatch({\n                    type: \"CLEAR_MAIN_TASK\"\n                  });\n                }, 1450);\n                setTimeout(() => {\n                  dispatch({\n                    type: \"HIDE_LEFT_SIDE\",\n                    payload: \"show\"\n                  });\n                  dispatch({\n                    type: \"HIDE_RIGHT_SIDE\",\n                    payload: \"show\"\n                  });\n                }, 1500);\n              },\n              size: \"extra-large\",\n              color: \"xxl-grey\",\n              title: \"give up\",\n              mainColor: mainTask.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: () => {\n                setMainTaskAnim({\n                  anim: \"mainTaskDoneSimple\",\n                  duration: 1400\n                });\n                setIsMainTaskVisible(false);\n                setTimeout(() => {\n                  dispatch({\n                    type: \"MAIN_TASK_DONE\",\n                    payload: {\n                      taskId: mainTask.id,\n                      action: \"done\"\n                    }\n                  });\n                }, 1100);\n                setTimeout(() => {\n                  dispatch({\n                    type: \"HIDE_LEFT_SIDE\",\n                    payload: \"show\"\n                  });\n                  dispatch({\n                    type: \"HIDE_RIGHT_SIDE\",\n                    payload: \"show\"\n                  });\n                }, 1100);\n              },\n              size: \"extra-large\",\n              color: mainBtnColor,\n              title: \"done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-bottom\",\n      children: [\"Time's running out!\", /*#__PURE__*/_jsxDEV(Countdown, {\n        className: \"countdown\",\n        date: Date.now() + 900000,\n        renderer: countdownRenderer,\n        controlled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainTask, \"jaSTk8t5UPo2A60fSVZnpYWhwzg=\");\n\n_c = MainTask;\nexport default MainTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTask\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js"],"names":["React","useContext","useState","Animated","Countdown","ReactStopwatch","TasksContext","ButtonSmall","MainTask","props","mainTask","taskSize","state","dispatch","mainTaskMovement","isMainTaskVisible","setIsMainTaskVisible","notesVisible","setNotesVisible","mainTaskAnim","setMainTaskAnim","anim","duration","classList","color","concat","mainBtnColor","Completionist","countdownRenderer","hours","minutes","seconds","completed","task","setTimeout","type","payload","taskId","id","action","Date","now"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Animated } from \"react-animated-css\";\nimport Countdown from \"react-countdown\";\nimport ReactStopwatch from \"react-stopwatch\";\n\nimport { TasksContext } from \"../../context/context\";\n\nimport \"./MainTask.css\";\nimport \"./MainTask.anim.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  const { mainTask, taskSize } = props;\n  const { state, dispatch } = useContext(TasksContext);\n  const { mainTaskMovement } = state;\n  const [isMainTaskVisible, setIsMainTaskVisible] = useState(true);\n  const [notesVisible, setNotesVisible] = useState(false);\n  const [mainTaskAnim, setMainTaskAnim] = useState({\n    anim: \"mainTaskDoneSimple\",\n    duration: 1200,\n  });\n\n  let classList = \"main-task \" + taskSize;\n  classList =\n    mainTask.color !== \"0\"\n      ? classList.concat(\" main-task-color-\" + mainTask.color)\n      : classList;\n  classList = notesVisible\n    ? classList.concat(\" main-task-with-notes\")\n    : classList;\n\n  const mainBtnColor = \"xxl-done btn-\" + mainTask.color;\n\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n    default:\n      return null;\n  }\n\n  const Completionist = () => <span>You missed the deadline!</span>;\n\n  const countdownRenderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Completionist />;\n    } else {\n      // Render a countdown\n      return (\n        <div className=\"countdown\">\n          <span className=\"countdown-units\">{hours}h</span>\n          <span className=\"countdown-units\">{minutes}m</span>\n          <span className=\"countdown-units\">{seconds}s</span>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"main-task-wrapper\">\n      <div className=\"main-task-top\">\n        <h1 className=\"main-task-h1\">do right now</h1>\n        <div className=\"main-task-with-btns\">\n          <Animated\n            animationOut={mainTaskAnim.anim}\n            animationOutDuration={mainTaskAnim.duration}\n            isVisible={isMainTaskVisible}\n          >\n            <div className=\"notes-container\">\n              <div\n                className={classList}\n                onClick={() => {\n                  setNotesVisible(!notesVisible);\n                  // dispatch({\n                  //   type: \"HIDE_LEFT_SIDE\",\n                  //   payload: \"toggle\",\n                  // });\n                  // dispatch({\n                  //   type: \"HIDE_RIGHT_SIDE\",\n                  //   payload: \"toggle\",\n                  // });\n                }}\n              >\n                <p>{mainTask.task}</p>\n              </div>\n              <div\n                className={\n                  notesVisible\n                    ? \"main-task-notes notes-visible\"\n                    : \"main-task-notes\"\n                }\n              >\n                <h4 className=\"subtask-h4\">+ Add a new subtask... </h4>\n                Doesn't work yet...\n              </div>\n            </div>\n          </Animated>\n          <div className={notesVisible ? \"main-btns-hide\" : \"main-btns-show\"}>\n            <div className=\"main-task-btns\">\n              <ButtonSmall\n                onClick={() => {\n                  setMainTaskAnim({\n                    anim: \"mainTaskOut\",\n                    duration: 1500,\n                  });\n                  setIsMainTaskVisible(false);\n                  setTimeout(() => {\n                    dispatch({\n                      type: \"CLEAR_MAIN_TASK\",\n                    });\n                  }, 1450);\n                  setTimeout(() => {\n                    dispatch({\n                      type: \"HIDE_LEFT_SIDE\",\n                      payload: \"show\",\n                    });\n                    dispatch({\n                      type: \"HIDE_RIGHT_SIDE\",\n                      payload: \"show\",\n                    });\n                  }, 1500);\n                }}\n                size=\"extra-large\"\n                color=\"xxl-grey\"\n                title=\"give up\"\n                mainColor={mainTask.color}\n              />\n              <ButtonSmall\n                onClick={() => {\n                  setMainTaskAnim({\n                    anim: \"mainTaskDoneSimple\",\n                    duration: 1400,\n                  });\n                  setIsMainTaskVisible(false);\n                  setTimeout(() => {\n                    dispatch({\n                      type: \"MAIN_TASK_DONE\",\n                      payload: { taskId: mainTask.id, action: \"done\" },\n                    });\n                  }, 1100);\n                  setTimeout(() => {\n                    dispatch({\n                      type: \"HIDE_LEFT_SIDE\",\n                      payload: \"show\",\n                    });\n                    dispatch({\n                      type: \"HIDE_RIGHT_SIDE\",\n                      payload: \"show\",\n                    });\n                  }, 1100);\n                }}\n                size=\"extra-large\"\n                color={mainBtnColor}\n                title=\"done\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-task-bottom\">\n        Time's running out!\n        <Countdown\n          className=\"countdown\"\n          date={Date.now() + 900000}\n          renderer={countdownRenderer}\n          controlled={false}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MainTask;\n"]},"metadata":{},"sourceType":"module"}