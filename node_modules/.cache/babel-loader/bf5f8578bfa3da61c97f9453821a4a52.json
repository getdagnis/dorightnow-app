{"ast":null,"code":"import uuid from \"uuid\";\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload.task,\n        type: \"todo\",\n        category: action.payload.category,\n        motivation: action.payload.motivation,\n        color: action.payload.color\n      };\n      const addedTasks = [...state.tasks, newTask];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(addedTasks));\n      return { ...state,\n        tasks: addedTasks\n      };\n\n    case \"DELETE_TASK\":\n      const deletedTasks = state.tasks.filter(t => t.id !== action.payload);\n      console.log(\"deletedTasks\", deletedTasks);\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(deletedTasks));\n      return { ...state,\n        tasks: deletedTasks\n      };\n\n    case \"SET_CURRENT_TASK\":\n      return { ...state,\n        currentTask: action.payload.id\n      };\n\n    case \"UPDATE_TASK\":\n      const updatedTask = { ...state.currentTask,\n        text: action.payload\n      };\n      const updatedTasksIndex = state.tasks.findIndex(note => note.id === state.currentTask.id);\n      const updatedTasks = [...state.tasks.slice(0, updatedTasksIndex), updatedTask, ...state.tasks.slice(updatedTasksIndex + 1)];\n      return {\n        currentTask: null,\n        tasks: updatedTasks\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/context/reducer.js"],"names":["uuid","reducer","state","action","type","newTask","id","v4","task","payload","category","motivation","color","addedTasks","tasks","localStorage","setItem","JSON","stringify","deletedTasks","filter","t","console","log","currentTask","updatedTask","text","updatedTasksIndex","findIndex","note","updatedTasks","slice"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEN,IAAI,CAACO,EAAL,EADU;AAEdC,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAAP,CAAeD,IAFP;AAGdJ,QAAAA,IAAI,EAAE,MAHQ;AAIdM,QAAAA,QAAQ,EAAEP,MAAM,CAACM,OAAP,CAAeC,QAJX;AAKdC,QAAAA,UAAU,EAAER,MAAM,CAACM,OAAP,CAAeE,UALb;AAMdC,QAAAA,KAAK,EAAET,MAAM,CAACM,OAAP,CAAeG;AANR,OAAhB;AASA,YAAMC,UAAU,GAAG,CAAC,GAAGX,KAAK,CAACY,KAAV,EAAiBT,OAAjB,CAAnB;AAEAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAAxC;AAEA,aAAO,EACL,GAAGX,KADE;AAELY,QAAAA,KAAK,EAAED;AAFF,OAAP;;AAIF,SAAK,aAAL;AACE,YAAMM,YAAY,GAAGjB,KAAK,CAACY,KAAN,CAAYM,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASH,MAAM,CAACM,OAA1C,CAArB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,YAA5B;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeC,YAAf,CAAxC;AAEA,aAAO,EACL,GAAGjB,KADE;AAELY,QAAAA,KAAK,EAAEK;AAFF,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGjB,KADE;AAELsB,QAAAA,WAAW,EAAErB,MAAM,CAACM,OAAP,CAAeH;AAFvB,OAAP;;AAIF,SAAK,aAAL;AACE,YAAMmB,WAAW,GAAG,EAClB,GAAGvB,KAAK,CAACsB,WADS;AAElBE,QAAAA,IAAI,EAAEvB,MAAM,CAACM;AAFK,OAApB;AAKA,YAAMkB,iBAAiB,GAAGzB,KAAK,CAACY,KAAN,CAAYc,SAAZ,CACvBC,IAAD,IAAUA,IAAI,CAACvB,EAAL,KAAYJ,KAAK,CAACsB,WAAN,CAAkBlB,EADhB,CAA1B;AAIA,YAAMwB,YAAY,GAAG,CACnB,GAAG5B,KAAK,CAACY,KAAN,CAAYiB,KAAZ,CAAkB,CAAlB,EAAqBJ,iBAArB,CADgB,EAEnBF,WAFmB,EAGnB,GAAGvB,KAAK,CAACY,KAAN,CAAYiB,KAAZ,CAAkBJ,iBAAiB,GAAG,CAAtC,CAHgB,CAArB;AAMA,aAAO;AACLH,QAAAA,WAAW,EAAE,IADR;AAELV,QAAAA,KAAK,EAAEgB;AAFF,OAAP;;AAIF;AACE,aAAO5B,KAAP;AAtDJ;AAwDD","sourcesContent":["import uuid from \"uuid\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload.task,\n        type: \"todo\",\n        category: action.payload.category,\n        motivation: action.payload.motivation,\n        color: action.payload.color,\n      };\n\n      const addedTasks = [...state.tasks, newTask];\n\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(addedTasks));\n\n      return {\n        ...state,\n        tasks: addedTasks,\n      };\n    case \"DELETE_TASK\":\n      const deletedTasks = state.tasks.filter((t) => t.id !== action.payload);\n      console.log(\"deletedTasks\", deletedTasks);\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(deletedTasks));\n\n      return {\n        ...state,\n        tasks: deletedTasks,\n      };\n    case \"SET_CURRENT_TASK\":\n      return {\n        ...state,\n        currentTask: action.payload.id,\n      };\n    case \"UPDATE_TASK\":\n      const updatedTask = {\n        ...state.currentTask,\n        text: action.payload,\n      };\n\n      const updatedTasksIndex = state.tasks.findIndex(\n        (note) => note.id === state.currentTask.id\n      );\n\n      const updatedTasks = [\n        ...state.tasks.slice(0, updatedTasksIndex),\n        updatedTask,\n        ...state.tasks.slice(updatedTasksIndex + 1),\n      ];\n\n      return {\n        currentTask: null,\n        tasks: updatedTasks,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}