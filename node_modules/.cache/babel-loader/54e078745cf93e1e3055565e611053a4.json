{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/Feedback/Feedback.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport \"./Feedback.css\";\nimport feedbackIcon from \"./feedback.svg\";\n\nfunction Feedback() {\n  _s();\n\n  const [feedbackOpen, setFeedbackOpen] = useState(false);\n  let ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }, [feedbackOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback\",\n    children: feedbackOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-open\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"feedback-h3\",\n        children: \"Hi! I'm still building this app.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), \"Please leave your feedback to help it get better:\", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"feedback-form\",\n        action: \"POST\",\n        netlify: true,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"task-input form-input\",\n          name: \"feedback-text\",\n          id: \"feedback-text\",\n          cols: \"30\",\n          rows: \"3\",\n          ref: e => {\n            ref.current = e;\n          },\n          placeholder: \"Things I like... things I don't like... features I miss...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n          onClick: e => {\n            e.preventdefault();\n          },\n          title: \"submit\",\n          size: \"large\",\n          type: \"submit\",\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-btn-hide\",\n        onClick: () => {\n          setFeedbackOpen(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-closed\",\n      onClick: () => {\n        setFeedbackOpen(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"feedback-icon\",\n        src: feedbackIcon,\n        alt: \"Give feedback!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), \"Tried this? Give feedback!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feedback, \"t/9n0JPdazjZzmVW7L5CyOID43g=\");\n\n_c = Feedback;\nexport default Feedback;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/Feedback/Feedback.js"],"names":["React","useState","useEffect","useRef","ButtonSmall","Feedback","feedbackOpen","setFeedbackOpen","ref","current","focus","e","preventdefault","feedbackIcon"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,gBAAP;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AAEA,MAAIO,GAAG,GAAGL,MAAM,EAAhB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACC,OAAJ,CAAYC,KAAZ;AACD,GAFQ,EAEN,CAACJ,YAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGA,YAAY,gBACX;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,oEAGE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,MAAM,EAAC,MAAvC;AAA8C,QAAA,OAAO,MAArD;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,uBADZ;AAEE,UAAA,IAAI,EAAC,eAFP;AAGE,UAAA,EAAE,EAAC,eAHL;AAIE,UAAA,IAAI,EAAC,IAJP;AAKE,UAAA,IAAI,EAAC,GALP;AAME,UAAA,GAAG,EAAGK,CAAD,IAAO;AACVH,YAAAA,GAAG,CAACC,OAAJ,GAAcE,CAAd;AACD,WARH;AASE,UAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,WAAD;AACE,UAAA,OAAO,EAAGA,CAAD,IAAO;AACdA,YAAAA,CAAC,CAACC,cAAF;AACD,WAHH;AAIE,UAAA,KAAK,EAAC,QAJR;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,IAAI,EAAC,QANP;AAOE,UAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAyBE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbL,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAkCX;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAJH;AAAA,8BAME;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,GAAG,EAAEM,YAFP;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnCJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD;;GA7DQR,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport \"./Feedback.css\";\nimport feedbackIcon from \"./feedback.svg\";\n\nfunction Feedback() {\n  const [feedbackOpen, setFeedbackOpen] = useState(false);\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  }, [feedbackOpen]);\n\n  return (\n    <div className=\"feedback\">\n      {feedbackOpen ? (\n        <div className=\"feedback-open\">\n          <h3 className=\"feedback-h3\">Hi! I'm still building this app.</h3>\n          Please leave your feedback to help it get better:\n          <form className=\"feedback-form\" action=\"POST\" netlify>\n            <textarea\n              className=\"task-input form-input\"\n              name=\"feedback-text\"\n              id=\"feedback-text\"\n              cols=\"30\"\n              rows=\"3\"\n              ref={(e) => {\n                ref.current = e;\n              }}\n              placeholder=\"Things I like... things I don't like... features I miss...\"\n            ></textarea>\n            <ButtonSmall\n              onClick={(e) => {\n                e.preventdefault();\n              }}\n              title=\"submit\"\n              size=\"large\"\n              type=\"submit\"\n              color=\"red\"\n            />\n          </form>\n          <div\n            className=\"task-btn-hide\"\n            onClick={() => {\n              setFeedbackOpen(false);\n            }}\n          ></div>\n        </div>\n      ) : (\n        <div\n          className=\"feedback-closed\"\n          onClick={() => {\n            setFeedbackOpen(true);\n          }}\n        >\n          <img\n            className=\"feedback-icon\"\n            src={feedbackIcon}\n            alt=\"Give feedback!\"\n          />\n          Tried this? Give feedback!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}