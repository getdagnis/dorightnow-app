{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm, FormProvider, useFieldArray } from \"react-hook-form\";\nimport { TasksContext } from \"../../context/context\";\nimport \"./TaskAdd.css\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport { TaskFormTop, TaskFormOptions } from \"./TaskForm\";\n\nfunction TaskAdd(props) {\n  _s();\n\n  let {\n    clickHandle\n  } = props;\n  const {\n    dispatch\n  } = useContext(TasksContext);\n  const [showOptions, setShowOptions] = useState(false);\n  let ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }); // FORM HANDLING BY REACT-HOOK-FORM\n\n  const {\n    register,\n    control,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    append\n  } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n\n  const onSubmit = data => {\n    console.log(\"submit data\", data);\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: data\n    });\n    clickHandle();\n  };\n\n  console.log(\"task adding errors\", errors);\n\n  const handleUserKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onSubmit)();\n    }\n  };\n\n  function doLaterAction(e) {\n    console.log(\"do later event\", e); // handleSubmit(onSubmit)();\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"no-tasks no-tasks-bigger\",\n        children: \"Add something to do...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-task-form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(TaskFormTop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), showOptions ? /*#__PURE__*/_jsxDEV(TaskFormOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-options\",\n          onClick: () => {\n            setShowOptions(!showOptions);\n          },\n          children: \"+ Show optional details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-btns-left\",\n            children: /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: clickHandle,\n              title: \"Cancel\",\n              color: \"grey\",\n              size: isMobile ? \"mobile\" : \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-btns-right\",\n            children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: () => {\n                append({\n                  list: \"later\"\n                });\n                doLaterAction();\n              },\n              title: \"Do later\",\n              color: \"grey\",\n              size: isMobile ? \"mobile\" : \"large\",\n              icon: turtleIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonSmall // onClick={handleSubmit(onSubmit())}\n            , {\n              type: \"submit\",\n              title: \"Do today\",\n              color: \"red\",\n              size: isMobile ? \"mobile\" : \"large\",\n              icon: quickIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskAdd, \"I7OUJffyLh9seF2eevlKs0B4Iao=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = TaskAdd;\nexport default TaskAdd; // <div className=\"new-task-form\">\n// <form onSubmit={handleSubmit} action=\"\">\n//   <input\n//     type=\"text\"\n//     ref={ref}\n//     onChange={handleChange}\n//     value={value}\n//   />\n//   <button>Add task</button>\n// </form>\n// </div>\n// <textarea\n// name=\"task-text\"\n// id=\"task-text\"\n// placeholder=\"What do you want to do?\"\n// ></textarea>\n// <table className=\"task-table\">\n// <tbody>\n//   <tr>\n//     <td className=\"name-cell\">motivation:</td>\n//     <td>\n//       <div className=\"tags-main\" data-name=\"tags-input\">\n//         <input className=\"tags-input\" type=\"text\" />\n//       </div>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">cathegory:</td>\n//     <td>\n//       <select>\n//         <option value=\"15 minutes\" selected>\n//           No cathegories added\n//         </option>\n//       </select>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">color:</td>\n//     <td>\n//       <div className=\"color-cell\">\n//         <span\n//           id=\"grey-color\"\n//           className=\"pick-color grey-task active-color\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"blue-color\"\n//           className=\"pick-color cath-a\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"green-color\"\n//           className=\"pick-color cath-b\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"pink-color\"\n//           className=\"pick-color cath-c\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//       </div>\n//     </td>\n//   </tr>\n// </tbody>\n// </table>\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskAdd\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js"],"names":["React","useContext","useRef","useState","useEffect","isMobile","useForm","FormProvider","useFieldArray","TasksContext","ButtonSmall","TaskFormTop","TaskFormOptions","TaskAdd","props","clickHandle","dispatch","showOptions","setShowOptions","ref","current","focus","register","control","handleSubmit","errors","append","name","onSubmit","data","console","log","type","payload","handleUserKeyPress","e","key","shiftKey","doLaterAction","list","turtleIcon","quickIcon"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm, FormProvider, useFieldArray } from \"react-hook-form\";\n\nimport { TasksContext } from \"../../context/context\";\nimport \"./TaskAdd.css\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\n\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport { TaskFormTop, TaskFormOptions } from \"./TaskForm\";\n\nfunction TaskAdd(props) {\n  let { clickHandle } = props;\n  const { dispatch } = useContext(TasksContext);\n  const [showOptions, setShowOptions] = useState(false);\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  });\n\n  // FORM HANDLING BY REACT-HOOK-FORM\n  const { register, control, handleSubmit, errors } = useForm();\n\n  const { append } = useFieldArray({\n    control,\n    name: \"test\",\n  });\n\n  const onSubmit = (data) => {\n    console.log(\"submit data\", data);\n    dispatch({ type: \"ADD_TASK\", payload: data });\n    clickHandle();\n  };\n  console.log(\"task adding errors\", errors);\n\n  const handleUserKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onSubmit)();\n    }\n  };\n\n  function doLaterAction(e) {\n    console.log(\"do later event\", e);\n    // handleSubmit(onSubmit)();\n  }\n\n  return (\n    <FormProvider>\n      <div className=\"new-task\">\n        <h2 className=\"no-tasks no-tasks-bigger\">Add something to do...</h2>\n\n        <form className=\"new-task-form\" onSubmit={handleSubmit(onSubmit)}>\n          <TaskFormTop />\n          {showOptions ? (\n            <TaskFormOptions />\n          ) : (\n            <div\n              className=\"show-options\"\n              onClick={() => {\n                setShowOptions(!showOptions);\n              }}\n            >\n              + Show optional details\n            </div>\n          )}\n          <div className=\"add-task-btns\">\n            <div className=\"task-btns-left\">\n              <ButtonSmall\n                onClick={clickHandle}\n                title=\"Cancel\"\n                color=\"grey\"\n                size={isMobile ? \"mobile\" : \"large\"}\n              />\n            </div>\n            <div className=\"task-btns-right\">\n              <ButtonSmall\n                onClick={() => {\n                  append({ list: \"later\" });\n                  doLaterAction();\n                }}\n                title=\"Do later\"\n                color=\"grey\"\n                size={isMobile ? \"mobile\" : \"large\"}\n                icon={turtleIcon}\n              />\n              <ButtonSmall\n                // onClick={handleSubmit(onSubmit())}\n                type=\"submit\"\n                title=\"Do today\"\n                color=\"red\"\n                size={isMobile ? \"mobile\" : \"large\"}\n                icon={quickIcon}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"new-task-cover\"></div>\n    </FormProvider>\n  );\n}\n\nexport default TaskAdd;\n\n// <div className=\"new-task-form\">\n// <form onSubmit={handleSubmit} action=\"\">\n//   <input\n//     type=\"text\"\n//     ref={ref}\n//     onChange={handleChange}\n//     value={value}\n//   />\n//   <button>Add task</button>\n// </form>\n// </div>\n\n// <textarea\n// name=\"task-text\"\n// id=\"task-text\"\n// placeholder=\"What do you want to do?\"\n// ></textarea>\n// <table className=\"task-table\">\n// <tbody>\n//   <tr>\n//     <td className=\"name-cell\">motivation:</td>\n//     <td>\n//       <div className=\"tags-main\" data-name=\"tags-input\">\n//         <input className=\"tags-input\" type=\"text\" />\n//       </div>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">cathegory:</td>\n//     <td>\n//       <select>\n//         <option value=\"15 minutes\" selected>\n//           No cathegories added\n//         </option>\n//       </select>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">color:</td>\n//     <td>\n//       <div className=\"color-cell\">\n//         <span\n//           id=\"grey-color\"\n//           className=\"pick-color grey-task active-color\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"blue-color\"\n//           className=\"pick-color cath-a\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"green-color\"\n//           className=\"pick-color cath-b\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"pink-color\"\n//           className=\"pick-color cath-c\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//       </div>\n//     </td>\n//   </tr>\n// </tbody>\n// </table>\n"]},"metadata":{},"sourceType":"module"}