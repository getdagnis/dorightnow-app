{"ast":null,"code":"import uuid from \"uuid\";\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload.task,\n        type: \"todo\",\n        category: action.payload.category,\n        motivation: action.payload.motivation,\n        color: action.payload.color,\n        list: action.payload.list || \"today\"\n      };\n      const addedTasks = [...state.tasks, newTask];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(addedTasks));\n      return { ...state,\n        tasks: addedTasks\n      };\n\n    case \"DELETE_TASK\":\n      const nondeletedTasks = state.tasks.filter(t => t.id !== action.payload);\n      const deletedTask = state.tasks.filter(t => t.id === action.payload)[0];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(nondeletedTasks));\n      localStorage.setItem(\"deletedTask\", JSON.stringify(deletedTask));\n      return { ...state,\n        tasks: nondeletedTasks,\n        deletedTask: deletedTask,\n        justDeleted: true\n      };\n\n    case \"UNDELETE_TASK\":\n      const lastDeletedTask = state.deletedTask;\n      const restoredTasks = [...state.tasks, lastDeletedTask];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(restoredTasks));\n      return { ...state,\n        tasks: restoredTasks,\n        justDeleted: false\n      };\n\n    case \"REMOVE_JUSTDELETED\":\n      return { ...state,\n        justDeleted: false\n      };\n\n    case \"SET_MAIN_TASK\":\n      const currentTaskId = action.payload;\n      localStorage.setItem(\"mainTask\", JSON.stringify(currentTaskId));\n      return { ...state,\n        mainTaskMovement: \"in\",\n        currentTask: currentTaskId\n      };\n\n    case \"CLEAR_MAIN_TASK\":\n      console.log(\"CLEAR MAIN TASK\");\n      console.log(state.mainTaskMovement);\n      console.log(state.currentTask);\n      return { ...state,\n        currentTask: null,\n        mainTaskMovement: \"out\"\n      };\n\n    case \"MAIN_TASK_DONE\":\n      let newTasks = [];\n\n      if (action.payload.action === \"done\") {\n        const newType = \"done\";\n        const thisTaskIndex = state.tasks.findIndex(t => t.id === action.payload.taskId);\n        let mainTaskDone = state.tasks[thisTaskIndex];\n        mainTaskDone.type = newType;\n        localStorage.setItem(\"dorightnowTasks\", JSON.stringify(state.tasks));\n        newTasks = [...state.tasks.slice(0, thisTaskIndex), mainTaskDone, ...state.tasks.slice(thisTaskIndex + 1)];\n      }\n\n      localStorage.setItem(\"mainTask\", JSON.stringify(null));\n      return { ...state,\n        tasks: newTasks.length > 0 ? newTasks : state.tasks,\n        mainTaskMovement: \"done\",\n        currentTask: null\n      };\n\n    case \"UPDATE_TASK\":\n      const updatedTasksIndex = state.tasks.findIndex(t => t.id === action.payload.taskId);\n      const currentTask = state.tasks[updatedTasksIndex];\n      currentTask.task = action.payload.data.task.length > 0 ? action.payload.data.task : currentTask.task;\n      currentTask.motivation = action.payload.data.motivation.length > 0 ? action.payload.data.motivation : currentTask.motivation;\n      const updatedTasks = [...state.tasks.slice(0, updatedTasksIndex), currentTask, ...state.tasks.slice(updatedTasksIndex + 1)];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(updatedTasks));\n      return {\n        tasks: updatedTasks\n      };\n\n    case \"CLEANUP_TASKS\":\n      const cleanedTasks = state.tasks.filter(t => t.id && t.id.length > 1);\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(cleanedTasks));\n      return { ...state,\n        tasks: cleanedTasks\n      };\n\n    default:\n      return state;\n\n    case \"HIDE_LEFT_SIDE\":\n      console.log(\"HIDE_LEFT_SIDE\");\n      console.log(\"reducer left side hid\", state.hideLeftSide);\n      return { ...state,\n        hideLeftSide: !state.hideLeftSide\n      };\n  }\n}","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/context/reducer.js"],"names":["uuid","reducer","state","action","type","newTask","id","v4","task","payload","category","motivation","color","list","addedTasks","tasks","localStorage","setItem","JSON","stringify","nondeletedTasks","filter","t","deletedTask","justDeleted","lastDeletedTask","restoredTasks","currentTaskId","mainTaskMovement","currentTask","console","log","newTasks","newType","thisTaskIndex","findIndex","taskId","mainTaskDone","slice","length","updatedTasksIndex","data","updatedTasks","cleanedTasks","hideLeftSide"],"mappings":"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","sourcesContent":["import uuid from \"uuid\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload.task,\n        type: \"todo\",\n        category: action.payload.category,\n        motivation: action.payload.motivation,\n        color: action.payload.color,\n        list: action.payload.list || \"today\",\n      };\n\n      const addedTasks = [...state.tasks, newTask];\n\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(addedTasks));\n\n      return {\n        ...state,\n        tasks: addedTasks,\n      };\n\n    case \"DELETE_TASK\":\n      const nondeletedTasks = state.tasks.filter(\n        (t) => t.id !== action.payload\n      );\n      const deletedTask = state.tasks.filter((t) => t.id === action.payload)[0];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(nondeletedTasks));\n      localStorage.setItem(\"deletedTask\", JSON.stringify(deletedTask));\n\n      return {\n        ...state,\n        tasks: nondeletedTasks,\n        deletedTask: deletedTask,\n        justDeleted: true,\n      };\n\n    case \"UNDELETE_TASK\":\n      const lastDeletedTask = state.deletedTask;\n      const restoredTasks = [...state.tasks, lastDeletedTask];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(restoredTasks));\n\n      return {\n        ...state,\n        tasks: restoredTasks,\n        justDeleted: false,\n      };\n\n    case \"REMOVE_JUSTDELETED\":\n      return {\n        ...state,\n        justDeleted: false,\n      };\n\n    case \"SET_MAIN_TASK\":\n      const currentTaskId = action.payload;\n      localStorage.setItem(\"mainTask\", JSON.stringify(currentTaskId));\n\n      return {\n        ...state,\n        mainTaskMovement: \"in\",\n        currentTask: currentTaskId,\n      };\n\n    case \"CLEAR_MAIN_TASK\":\n      console.log(\"CLEAR MAIN TASK\");\n      console.log(state.mainTaskMovement);\n      console.log(state.currentTask);\n\n      return { ...state, currentTask: null, mainTaskMovement: \"out\" };\n\n    case \"MAIN_TASK_DONE\":\n      let newTasks = [];\n\n      if (action.payload.action === \"done\") {\n        const newType = \"done\";\n        const thisTaskIndex = state.tasks.findIndex(\n          (t) => t.id === action.payload.taskId\n        );\n\n        let mainTaskDone = state.tasks[thisTaskIndex];\n        mainTaskDone.type = newType;\n\n        localStorage.setItem(\"dorightnowTasks\", JSON.stringify(state.tasks));\n\n        newTasks = [\n          ...state.tasks.slice(0, thisTaskIndex),\n          mainTaskDone,\n          ...state.tasks.slice(thisTaskIndex + 1),\n        ];\n      }\n\n      localStorage.setItem(\"mainTask\", JSON.stringify(null));\n\n      return {\n        ...state,\n        tasks: newTasks.length > 0 ? newTasks : state.tasks,\n        mainTaskMovement: \"done\",\n        currentTask: null,\n      };\n\n    case \"UPDATE_TASK\":\n      const updatedTasksIndex = state.tasks.findIndex(\n        (t) => t.id === action.payload.taskId\n      );\n      const currentTask = state.tasks[updatedTasksIndex];\n      currentTask.task =\n        action.payload.data.task.length > 0\n          ? action.payload.data.task\n          : currentTask.task;\n      currentTask.motivation =\n        action.payload.data.motivation.length > 0\n          ? action.payload.data.motivation\n          : currentTask.motivation;\n\n      const updatedTasks = [\n        ...state.tasks.slice(0, updatedTasksIndex),\n        currentTask,\n        ...state.tasks.slice(updatedTasksIndex + 1),\n      ];\n\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(updatedTasks));\n\n      return {\n        tasks: updatedTasks,\n      };\n\n    case \"CLEANUP_TASKS\":\n      const cleanedTasks = state.tasks.filter((t) => t.id && t.id.length > 1);\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(cleanedTasks));\n\n      return {\n        ...state,\n        tasks: cleanedTasks,\n      };\n    default:\n      return state;\n\n    case \"HIDE_LEFT_SIDE\":\n      console.log(\"HIDE_LEFT_SIDE\");\n      console.log(\"reducer left side hid\", state.hideLeftSide);\n      return {\n        ...state,\n        hideLeftSide: !state.hideLeftSide,\n      };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}