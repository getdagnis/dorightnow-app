{"ast":null,"code":"import { ADD_TASK, DELETE_TASK, EDIT_TASK } from \"./actions\";\nconst initialState = {\n  tasks: fetchedTasks,\n  user: \"dagnis\"\n};\n\nconst taskReducer = (state = initialState, action) => {\n  let updatedCart;\n  let updatedItemIndex;\n\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CART:\n      updatedCart = [...state.cart];\n      updatedItemIndex = updatedCart.findIndex(item => item.id === action.payload.id);\n\n      if (updatedItemIndex < 0) {\n        updatedCart.push({ ...action.payload,\n          quantity: 1\n        });\n      } else {\n        const updatedItem = { ...updatedCart[updatedItemIndex]\n        };\n        updatedItem.quantity++;\n        updatedCart[updatedItemIndex] = updatedItem;\n      }\n\n      return { ...state,\n        cart: updatedCart\n      };\n\n    case REMOVE_PRODUCT_FROM_CART:\n      updatedCart = [...state.cart];\n      updatedItemIndex = updatedCart.findIndex(item => item.id === action.payload);\n      const updatedItem = { ...updatedCart[updatedItemIndex]\n      };\n      updatedItem.quantity--;\n\n      if (updatedItem.quantity <= 0) {\n        updatedCart.splice(updatedItemIndex, 1);\n      } else {\n        updatedCart[updatedItemIndex] = updatedItem;\n      }\n\n      return { ...state,\n        cart: updatedCart\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/reducer/reducers.js"],"names":["ADD_TASK","DELETE_TASK","EDIT_TASK","initialState","tasks","fetchedTasks","user","taskReducer","state","action","updatedCart","updatedItemIndex","type","ADD_PRODUCT_TO_CART","cart","findIndex","item","id","payload","push","quantity","updatedItem","REMOVE_PRODUCT_FROM_CART","splice"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,WAAjD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YADY;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,MAAIC,WAAJ;AACA,MAAIC,gBAAJ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAKC,mBAAL;AACEH,MAAAA,WAAW,GAAG,CAAC,GAAGF,KAAK,CAACM,IAAV,CAAd;AACAH,MAAAA,gBAAgB,GAAGD,WAAW,CAACK,SAAZ,CAChBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACS,OAAP,CAAeD,EADpB,CAAnB;;AAIA,UAAIN,gBAAgB,GAAG,CAAvB,EAA0B;AACxBD,QAAAA,WAAW,CAACS,IAAZ,CAAiB,EAAE,GAAGV,MAAM,CAACS,OAAZ;AAAqBE,UAAAA,QAAQ,EAAE;AAA/B,SAAjB;AACD,OAFD,MAEO;AACL,cAAMC,WAAW,GAAG,EAClB,GAAGX,WAAW,CAACC,gBAAD;AADI,SAApB;AAGAU,QAAAA,WAAW,CAACD,QAAZ;AACAV,QAAAA,WAAW,CAACC,gBAAD,CAAX,GAAgCU,WAAhC;AACD;;AACD,aAAO,EAAE,GAAGb,KAAL;AAAYM,QAAAA,IAAI,EAAEJ;AAAlB,OAAP;;AACF,SAAKY,wBAAL;AACEZ,MAAAA,WAAW,GAAG,CAAC,GAAGF,KAAK,CAACM,IAAV,CAAd;AACAH,MAAAA,gBAAgB,GAAGD,WAAW,CAACK,SAAZ,CAChBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACS,OADZ,CAAnB;AAIA,YAAMG,WAAW,GAAG,EAClB,GAAGX,WAAW,CAACC,gBAAD;AADI,OAApB;AAGAU,MAAAA,WAAW,CAACD,QAAZ;;AACA,UAAIC,WAAW,CAACD,QAAZ,IAAwB,CAA5B,EAA+B;AAC7BV,QAAAA,WAAW,CAACa,MAAZ,CAAmBZ,gBAAnB,EAAqC,CAArC;AACD,OAFD,MAEO;AACLD,QAAAA,WAAW,CAACC,gBAAD,CAAX,GAAgCU,WAAhC;AACD;;AAED,aAAO,EAAE,GAAGb,KAAL;AAAYM,QAAAA,IAAI,EAAEJ;AAAlB,OAAP;;AACF;AACE,aAAOF,KAAP;AAnCJ;AAqCD,CAxCD;;AA0CA,eAAeD,WAAf","sourcesContent":["import { ADD_TASK, DELETE_TASK, EDIT_TASK } from \"./actions\";\n\nconst initialState = {\n  tasks: fetchedTasks,\n  user: \"dagnis\",\n};\n\nconst taskReducer = (state = initialState, action) => {\n  let updatedCart;\n  let updatedItemIndex;\n  switch (action.type) {\n    case ADD_PRODUCT_TO_CART:\n      updatedCart = [...state.cart];\n      updatedItemIndex = updatedCart.findIndex(\n        (item) => item.id === action.payload.id\n      );\n\n      if (updatedItemIndex < 0) {\n        updatedCart.push({ ...action.payload, quantity: 1 });\n      } else {\n        const updatedItem = {\n          ...updatedCart[updatedItemIndex],\n        };\n        updatedItem.quantity++;\n        updatedCart[updatedItemIndex] = updatedItem;\n      }\n      return { ...state, cart: updatedCart };\n    case REMOVE_PRODUCT_FROM_CART:\n      updatedCart = [...state.cart];\n      updatedItemIndex = updatedCart.findIndex(\n        (item) => item.id === action.payload\n      );\n\n      const updatedItem = {\n        ...updatedCart[updatedItemIndex],\n      };\n      updatedItem.quantity--;\n      if (updatedItem.quantity <= 0) {\n        updatedCart.splice(updatedItemIndex, 1);\n      } else {\n        updatedCart[updatedItemIndex] = updatedItem;\n      }\n\n      return { ...state, cart: updatedCart };\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n"]},"metadata":{},"sourceType":"module"}