{"ast":null,"code":"import uuid from \"uuid\";\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload.task,\n        type: \"todo\",\n        category: action.payload.category,\n        motivation: action.payload.motivation,\n        color: action.payload.color\n      };\n      const addedTasks = [...state.tasks, newTask];\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(addedTasks));\n      return { ...state,\n        tasks: addedTasks\n      };\n\n    case \"DELETE_TASK\":\n      const nondeletedTasks = state.tasks.filter(t => t.id !== action.payload);\n      const deletedTask = state.tasks.filter(t => t.id === action.payload);\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(nondeletedTasks));\n      return { ...state,\n        tasks: nondeletedTasks,\n        deletedTask: deletedTask,\n        justDeleted: true\n      };\n\n    case \"UNDELETE_TASK\":\n      const lastDeletedTask = state.deletedTask;\n      const restoredTasks = [...state.tasks, lastDeletedTask];\n      return { ...state,\n        tasks: restoredTasks,\n        justDeleted: false\n      };\n\n    case \"SET_CURRENT_TASK\":\n      return { ...state,\n        currentTask: action.payload.id\n      };\n\n    case \"UPDATE_TASK\":\n      const updatedTask = { ...state.currentTask,\n        text: action.payload\n      };\n      const updatedTasksIndex = state.tasks.findIndex(note => note.id === state.currentTask.id);\n      const updatedTasks = [...state.tasks.slice(0, updatedTasksIndex), updatedTask, ...state.tasks.slice(updatedTasksIndex + 1)];\n      return {\n        currentTask: null,\n        tasks: updatedTasks\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/context/reducer.js"],"names":["uuid","reducer","state","action","type","newTask","id","v4","task","payload","category","motivation","color","addedTasks","tasks","localStorage","setItem","JSON","stringify","nondeletedTasks","filter","t","deletedTask","justDeleted","lastDeletedTask","restoredTasks","currentTask","updatedTask","text","updatedTasksIndex","findIndex","note","updatedTasks","slice"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEN,IAAI,CAACO,EAAL,EADU;AAEdC,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAAP,CAAeD,IAFP;AAGdJ,QAAAA,IAAI,EAAE,MAHQ;AAIdM,QAAAA,QAAQ,EAAEP,MAAM,CAACM,OAAP,CAAeC,QAJX;AAKdC,QAAAA,UAAU,EAAER,MAAM,CAACM,OAAP,CAAeE,UALb;AAMdC,QAAAA,KAAK,EAAET,MAAM,CAACM,OAAP,CAAeG;AANR,OAAhB;AASA,YAAMC,UAAU,GAAG,CAAC,GAAGX,KAAK,CAACY,KAAV,EAAiBT,OAAjB,CAAnB;AAEAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAAxC;AAEA,aAAO,EACL,GAAGX,KADE;AAELY,QAAAA,KAAK,EAAED;AAFF,OAAP;;AAKF,SAAK,aAAL;AACE,YAAMM,eAAe,GAAGjB,KAAK,CAACY,KAAN,CAAYM,MAAZ,CACrBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASH,MAAM,CAACM,OADD,CAAxB;AAGA,YAAMa,WAAW,GAAGpB,KAAK,CAACY,KAAN,CAAYM,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASH,MAAM,CAACM,OAA1C,CAApB;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeC,eAAf,CAAxC;AAEA,aAAO,EACL,GAAGjB,KADE;AAELY,QAAAA,KAAK,EAAEK,eAFF;AAGLG,QAAAA,WAAW,EAAEA,WAHR;AAILC,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAOF,SAAK,eAAL;AACE,YAAMC,eAAe,GAAGtB,KAAK,CAACoB,WAA9B;AACA,YAAMG,aAAa,GAAG,CAAC,GAAGvB,KAAK,CAACY,KAAV,EAAiBU,eAAjB,CAAtB;AAEA,aAAO,EACL,GAAGtB,KADE;AAELY,QAAAA,KAAK,EAAEW,aAFF;AAGLF,QAAAA,WAAW,EAAE;AAHR,OAAP;;AAMF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGrB,KADE;AAELwB,QAAAA,WAAW,EAAEvB,MAAM,CAACM,OAAP,CAAeH;AAFvB,OAAP;;AAKF,SAAK,aAAL;AACE,YAAMqB,WAAW,GAAG,EAClB,GAAGzB,KAAK,CAACwB,WADS;AAElBE,QAAAA,IAAI,EAAEzB,MAAM,CAACM;AAFK,OAApB;AAKA,YAAMoB,iBAAiB,GAAG3B,KAAK,CAACY,KAAN,CAAYgB,SAAZ,CACvBC,IAAD,IAAUA,IAAI,CAACzB,EAAL,KAAYJ,KAAK,CAACwB,WAAN,CAAkBpB,EADhB,CAA1B;AAIA,YAAM0B,YAAY,GAAG,CACnB,GAAG9B,KAAK,CAACY,KAAN,CAAYmB,KAAZ,CAAkB,CAAlB,EAAqBJ,iBAArB,CADgB,EAEnBF,WAFmB,EAGnB,GAAGzB,KAAK,CAACY,KAAN,CAAYmB,KAAZ,CAAkBJ,iBAAiB,GAAG,CAAtC,CAHgB,CAArB;AAMA,aAAO;AACLH,QAAAA,WAAW,EAAE,IADR;AAELZ,QAAAA,KAAK,EAAEkB;AAFF,OAAP;;AAIF;AACE,aAAO9B,KAAP;AAvEJ;AAyED","sourcesContent":["import uuid from \"uuid\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload.task,\n        type: \"todo\",\n        category: action.payload.category,\n        motivation: action.payload.motivation,\n        color: action.payload.color,\n      };\n\n      const addedTasks = [...state.tasks, newTask];\n\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(addedTasks));\n\n      return {\n        ...state,\n        tasks: addedTasks,\n      };\n\n    case \"DELETE_TASK\":\n      const nondeletedTasks = state.tasks.filter(\n        (t) => t.id !== action.payload\n      );\n      const deletedTask = state.tasks.filter((t) => t.id === action.payload);\n      localStorage.setItem(\"dorightnowTasks\", JSON.stringify(nondeletedTasks));\n\n      return {\n        ...state,\n        tasks: nondeletedTasks,\n        deletedTask: deletedTask,\n        justDeleted: true,\n      };\n\n    case \"UNDELETE_TASK\":\n      const lastDeletedTask = state.deletedTask;\n      const restoredTasks = [...state.tasks, lastDeletedTask];\n\n      return {\n        ...state,\n        tasks: restoredTasks,\n        justDeleted: false,\n      };\n\n    case \"SET_CURRENT_TASK\":\n      return {\n        ...state,\n        currentTask: action.payload.id,\n      };\n\n    case \"UPDATE_TASK\":\n      const updatedTask = {\n        ...state.currentTask,\n        text: action.payload,\n      };\n\n      const updatedTasksIndex = state.tasks.findIndex(\n        (note) => note.id === state.currentTask.id\n      );\n\n      const updatedTasks = [\n        ...state.tasks.slice(0, updatedTasksIndex),\n        updatedTask,\n        ...state.tasks.slice(updatedTasksIndex + 1),\n      ];\n\n      return {\n        currentTask: null,\n        tasks: updatedTasks,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}