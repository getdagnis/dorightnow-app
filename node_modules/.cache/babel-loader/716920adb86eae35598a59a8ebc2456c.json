{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis.skurbe/Github/old-dorightnow-app/src/components/Task/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { MobileView, isMobile } from \"react-device-detect\";\nimport { TasksContext } from \"../../context/context\";\nimport \"./Task.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport TaskAdd from \"../TaskAdd/TaskAdd\";\nconst Task = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(TasksContext);\n  const [editTask, setEditTask] = useState(false);\n  const [mobileTaskEditOpen, setMobileTaskEditOpen] = useState(false);\n  const {\n    task,\n    type,\n    color,\n    id\n  } = props.task;\n  const {\n    delay,\n    ...draggableProps\n  } = props;\n  const categoryClasses = color !== \"0\" ? \"cat cat-\" + color : null;\n  const catColor = color ? color : \"red\";\n  let taskClasses = \"task \" + type; // Creates a bounce animation delay for each task seperately based on position in array\n\n  taskClasses = delay ? taskClasses.concat(\" delay-\" + delay) : taskClasses;\n\n  const mainTaskLaunch = () => {\n    dispatch({\n      type: \"CLEAR_MAIN_TASK\",\n      payload: id\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"SET_MAIN_TASK\",\n        payload: id\n      });\n    }, 0);\n    setTimeout(() => {\n      dispatch({\n        type: \"HIDE_LEFT_SIDE\",\n        payload: \"hide\"\n      });\n      dispatch({\n        type: \"HIDE_RIGHT_SIDE\",\n        payload: \"hide\"\n      });\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    ...draggableProps,\n    className: taskClasses,\n    onClick: isMobile ? () => setMobileTaskEditOpen(!mobileTaskEditOpen) : null,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: categoryClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileView, {\n      children: mobileTaskEditOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-edit-mobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n            title: \"edit\",\n            color: \"grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            title: \"do later\",\n            color: \"grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            title: \"do now\",\n            color: catColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => dispatch({\n            type: \"DELETE_TASK\",\n            payload: id\n          }),\n          className: \"task-btn-delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isMobile && type === \"todo\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-btns\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n          onClick: () => {\n            setEditTask(true);\n          },\n          title: \"edit\",\n          color: \"grey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n          onClick: () => {\n            mainTaskLaunch();\n          },\n          title: \"do now\",\n          color: catColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          dispatch({\n            type: \"DELETE_TASK\",\n            payload: id\n          });\n        },\n        className: \"task-btn-delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : null, type === \"done\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        dispatch({\n          type: \"DELETE_TASK\",\n          payload: id\n        });\n      },\n      className: \"task-btn-hide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : null, editTask ? /*#__PURE__*/_jsxDEV(TaskAdd, {\n      taskEdit: \"true\",\n      thisTask: props.task,\n      clickHandle: () => {\n        setEditTask(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}, \"uFLE9Efh96Rk6Itp/S263N3lrPo=\"));\n_c2 = Task;\nexport default Task;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Task$React.forwardRef\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"sources":["/Users/dagnis.skurbe/Github/old-dorightnow-app/src/components/Task/Task.js"],"names":["React","useContext","useState","MobileView","isMobile","TasksContext","ButtonSmall","TaskAdd","Task","forwardRef","props","ref","dispatch","editTask","setEditTask","mobileTaskEditOpen","setMobileTaskEditOpen","task","type","color","id","delay","draggableProps","categoryClasses","catColor","taskClasses","concat","mainTaskLaunch","payload","setTimeout"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { MobileView, isMobile } from \"react-device-detect\";\n\nimport { TasksContext } from \"../../context/context\";\n\nimport \"./Task.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport TaskAdd from \"../TaskAdd/TaskAdd\";\n\nconst Task = React.forwardRef((props, ref) => {\n  const { dispatch } = useContext(TasksContext);\n  const [editTask, setEditTask] = useState(false);\n  const [mobileTaskEditOpen, setMobileTaskEditOpen] = useState(false);\n\n  const { task, type, color, id } = props.task;\n  const { delay, ...draggableProps } = props;\n  const categoryClasses = color !== \"0\" ? \"cat cat-\" + color : null;\n  const catColor = color ? color : \"red\";\n  let taskClasses = \"task \" + type;\n\n  // Creates a bounce animation delay for each task seperately based on position in array\n  taskClasses = delay ? taskClasses.concat(\" delay-\" + delay) : taskClasses;\n\n  const mainTaskLaunch = () => {\n    dispatch({ type: \"CLEAR_MAIN_TASK\", payload: id });\n\n    setTimeout(() => {\n      dispatch({ type: \"SET_MAIN_TASK\", payload: id });\n    }, 0);\n    setTimeout(() => {\n      dispatch({ type: \"HIDE_LEFT_SIDE\", payload: \"hide\" });\n      dispatch({ type: \"HIDE_RIGHT_SIDE\", payload: \"hide\" });\n    }, 500);\n  };\n\n  return (\n    <div\n      ref={ref}\n      {...draggableProps}\n      className={taskClasses}\n      onClick={\n        isMobile ? () => setMobileTaskEditOpen(!mobileTaskEditOpen) : null\n      }\n    >\n      <div className={categoryClasses}></div>\n      <p>{task}</p>\n\n      <MobileView>\n        {mobileTaskEditOpen ? (\n          <div className=\"task-edit-mobile\">\n            <div className=\"task-btns\">\n              <ButtonSmall title=\"edit\" color=\"grey\" />\n              <ButtonSmall title=\"do later\" color=\"grey\" />\n              <ButtonSmall title=\"do now\" color={catColor} />\n            </div>\n            <div\n              onClick={() => dispatch({ type: \"DELETE_TASK\", payload: id })}\n              className=\"task-btn-delete\"\n            ></div>\n          </div>\n        ) : null}\n      </MobileView>\n\n      {\n        // DESKTOP BROWSER VIEW STARTS HERE\n      }\n      {!isMobile && type === \"todo\" ? (\n        <div className=\"task-edit\">\n          <div className=\"task-btns\">\n            <ButtonSmall\n              onClick={() => {\n                setEditTask(true);\n              }}\n              title=\"edit\"\n              color=\"grey\"\n            />\n\n            <ButtonSmall\n              onClick={() => {\n                mainTaskLaunch();\n              }}\n              title=\"do now\"\n              color={catColor}\n            />\n          </div>\n          <div\n            onClick={() => {\n              dispatch({ type: \"DELETE_TASK\", payload: id });\n            }}\n            className=\"task-btn-delete\"\n          ></div>\n        </div>\n      ) : null}\n      {type === \"done\" ? (\n        <div\n          onClick={() => {\n            dispatch({ type: \"DELETE_TASK\", payload: id });\n          }}\n          className=\"task-btn-hide\"\n        ></div>\n      ) : null}\n      {editTask ? (\n        <TaskAdd\n          taskEdit=\"true\"\n          thisTask={props.task}\n          clickHandle={() => {\n            setEditTask(false);\n          }}\n        />\n      ) : null}\n    </div>\n  );\n});\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}