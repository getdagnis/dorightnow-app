{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { TasksContext } from \"../../context/context\";\nimport { Transition } from \"react-transition-group\";\nimport \"./MainTask.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  _s();\n\n  const {\n    mainTask,\n    taskSize\n  } = props;\n  const {\n    state,\n    dispatch\n  } = useContext(TasksContext);\n  const {\n    mainTaskMovement\n  } = state;\n  const duration = 300;\n  const defaultStyle = {\n    transition: `opacity ${duration}ms ease-in-out`,\n    opacity: 0\n  };\n  const transitionStyles = {\n    entering: {\n      opacity: 1\n    },\n    entered: {\n      opacity: 1\n    },\n    exiting: {\n      opacity: 0\n    },\n    exited: {\n      opacity: 0\n    }\n  };\n  let classList = \"main-task \" + taskSize;\n\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n\n    default:\n      return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-task-h1\",\n        children: \"do right now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-task-with-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Transition, {\n          in: inProp,\n          timeout: duration,\n          children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: { ...defaultStyle,\n              ...transitionStyles[state]\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classList,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: mainTask.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => {\n              dispatch({\n                type: \"MAIN_TASK_DONE\",\n                payload: {\n                  action: \"giveup\"\n                }\n              });\n            },\n            size: \"extra-large\",\n            color: \"xxl-grey\",\n            title: \"give up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => {\n              dispatch({\n                type: \"MAIN_TASK_DONE\",\n                payload: {\n                  taskId: mainTask.id,\n                  action: \"done\"\n                }\n              });\n            },\n            size: \"extra-large\",\n            color: \"xxl-red\",\n            title: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-bottom\",\n      children: \"Motivation comes here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainTask, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\n_c = MainTask;\nexport default MainTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTask\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js"],"names":["React","useContext","TasksContext","Transition","ButtonSmall","MainTask","props","mainTask","taskSize","state","dispatch","mainTaskMovement","duration","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","exited","classList","concat","inProp","task","type","payload","action","taskId","id"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { TasksContext } from \"../../context/context\";\nimport { Transition } from \"react-transition-group\";\n\nimport \"./MainTask.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  const { mainTask, taskSize } = props;\n  const { state, dispatch } = useContext(TasksContext);\n  const { mainTaskMovement } = state;\n\n  const duration = 300;\n\n  const defaultStyle = {\n    transition: `opacity ${duration}ms ease-in-out`,\n    opacity: 0,\n  };\n\n  const transitionStyles = {\n    entering: { opacity: 1 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n    exited: { opacity: 0 },\n  };\n\n  let classList = \"main-task \" + taskSize;\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n    default:\n      return null;\n  }\n\n  return (\n    <div className=\"main-task-wrapper\">\n      <div className=\"main-task-top\">\n        <h1 className=\"main-task-h1\">do right now</h1>\n        <div className=\"main-task-with-btns\">\n          <Transition in={inProp} timeout={duration}>\n            {(state) => (\n              <div\n                style={{\n                  ...defaultStyle,\n                  ...transitionStyles[state],\n                }}\n              >\n                <div className={classList}>\n                  <p>{mainTask.task}</p>\n                </div>\n              </div>\n            )}\n          </Transition>\n          <div className=\"main-task-btns\">\n            <ButtonSmall\n              onClick={() => {\n                dispatch({\n                  type: \"MAIN_TASK_DONE\",\n                  payload: { action: \"giveup\" },\n                });\n              }}\n              size=\"extra-large\"\n              color=\"xxl-grey\"\n              title=\"give up\"\n            />\n            <ButtonSmall\n              onClick={() => {\n                dispatch({\n                  type: \"MAIN_TASK_DONE\",\n                  payload: { taskId: mainTask.id, action: \"done\" },\n                });\n              }}\n              size=\"extra-large\"\n              color=\"xxl-red\"\n              title=\"done\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"main-task-bottom\">Motivation comes here...</div>\n    </div>\n  );\n}\n\nexport default MainTask;\n"]},"metadata":{},"sourceType":"module"}