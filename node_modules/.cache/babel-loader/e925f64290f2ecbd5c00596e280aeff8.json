{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskList/TaskList.js\";\nimport React, { useContext } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./TaskList.css\";\nimport Task from \"../Task/Task\";\n\nconst TaskList = props => {\n  const {\n    listType\n  } = props;\n  const {\n    dispatch,\n    state\n  } = useContext;\n  const {\n    tasks\n  } = state;\n\n  function handleDragEnd(result) {\n    const newTasks = tasks;\n    const [reorderedItem] = tasks.splice(result.source.index, 1);\n    newTasks.splice(result.destination.index, 0, reorderedItem);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: tasks && tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: listType,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"task-list\",\n        children: [tasks.map((t, index) => {\n          let delay = tasks.indexOf(t) + 2;\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: t.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(Task, {\n              delay: delay,\n              task: t,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              draggableRef: provided.innerRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 23\n            }, this)\n          }, t.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this);\n        }), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : listType === \"done\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"no-tasks\",\n      children: \"Nothing done today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"no-tasks\",\n      children: \"No tasks added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskList/TaskList.js"],"names":["React","useContext","DragDropContext","Droppable","Draggable","Task","TaskList","props","listType","dispatch","state","tasks","handleDragEnd","result","newTasks","reorderedItem","splice","source","index","destination","length","provided","innerRef","droppableProps","map","t","delay","indexOf","id","draggableProps","dragHandleProps","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AAEA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBT,UAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYD,KAAlB;;AAEA,WAASE,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,UAAMC,QAAQ,GAAGH,KAAjB;AACA,UAAM,CAACI,aAAD,IAAkBJ,KAAK,CAACK,MAAN,CAAaH,MAAM,CAACI,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAAxB;AACAJ,IAAAA,QAAQ,CAACE,MAAT,CAAgBH,MAAM,CAACM,WAAP,CAAmBD,KAAnC,EAA0C,CAA1C,EAA6CH,aAA7C;AACD;;AACD,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEH,aAA5B;AAAA,cACGD,KAAK,IAAIA,KAAK,CAACS,MAAN,GAAe,CAAxB,gBACC,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEZ,QAAxB;AAAA,gBACIa,QAAD,iBACC;AACE,QAAA,GAAG,EAAEA,QAAQ,CAACC,QADhB;AAAA,WAEMD,QAAQ,CAACE,cAFf;AAGE,QAAA,SAAS,EAAC,WAHZ;AAAA,mBAKGZ,KAAK,CAACa,GAAN,CAAU,CAACC,CAAD,EAAIP,KAAJ,KAAc;AACvB,cAAIQ,KAAK,GAAGf,KAAK,CAACgB,OAAN,CAAcF,CAAd,IAAmB,CAA/B;AACA,8BACE,QAAC,SAAD;AAAsB,YAAA,WAAW,EAAEA,CAAC,CAACG,EAArC;AAAyC,YAAA,KAAK,EAAEV,KAAhD;AAAA,sBACIG,QAAD,iBACC,QAAC,IAAD;AACE,cAAA,KAAK,EAAEK,KADT;AAEE,cAAA,IAAI,EAAED,CAFR;AAAA,iBAGMJ,QAAQ,CAACQ,cAHf;AAAA,iBAIMR,QAAQ,CAACS,eAJf;AAKE,cAAA,YAAY,EAAET,QAAQ,CAACC;AALzB;AAAA;AAAA;AAAA;AAAA;AAFJ,aAAgBG,CAAC,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAfA,CALH,EAqBGP,QAAQ,CAACU,WArBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADD,GA4BGvB,QAAQ,KAAK,MAAb,gBACF;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA/CD;;KAAMF,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport \"./TaskList.css\";\nimport Task from \"../Task/Task\";\n\nconst TaskList = (props) => {\n  const { listType } = props;\n  const { dispatch, state } = useContext;\n  const { tasks } = state;\n\n  function handleDragEnd(result) {\n    const newTasks = tasks;\n    const [reorderedItem] = tasks.splice(result.source.index, 1);\n    newTasks.splice(result.destination.index, 0, reorderedItem);\n  }\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      {tasks && tasks.length > 0 ? (\n        <Droppable droppableId={listType}>\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"task-list\"\n            >\n              {tasks.map((t, index) => {\n                let delay = tasks.indexOf(t) + 2;\n                return (\n                  <Draggable key={t.id} draggableId={t.id} index={index}>\n                    {(provided) => (\n                      <Task\n                        delay={delay}\n                        task={t}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        draggableRef={provided.innerRef}\n                      />\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      ) : listType === \"done\" ? (\n        <h3 className=\"no-tasks\">Nothing done today</h3>\n      ) : (\n        <h3 className=\"no-tasks\">No tasks added</h3>\n      )}\n    </DragDropContext>\n  );\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}