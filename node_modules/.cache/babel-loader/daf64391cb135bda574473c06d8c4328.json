{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/Feedback/Feedback.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport \"./Feedback.css\";\nimport feedbackIcon from \"./feedback.svg\";\n\nfunction Feedback() {\n  _s();\n\n  const [feedbackOpen, setFeedbackOpen] = useState(false);\n\n  function clickHandle() {\n    setFeedbackOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback\",\n    children: feedbackOpen ? /*#__PURE__*/_jsxDEV(FeedbackOpen, {\n      feedbackOpen: feedbackOpen,\n      clickHandle: clickHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-closed\",\n      onClick: () => {\n        setFeedbackOpen(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"feedback-icon\",\n        src: feedbackIcon,\n        alt: \"Give feedback!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), \"Tried this? Give feedback!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feedback, \"gVYY9iCfFBiGmKQ2Z52Kdxi+YTc=\");\n\n_c = Feedback;\n\nconst FeedbackOpen = props => {\n  _s2();\n\n  const {\n    clickHandle\n  } = props;\n  let ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const handleSubmit = e => {\n    clickHandle();\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-open\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"feedback-h3\",\n      children: \"Hi! I'm still building this app.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \"Please leave your feedback to help it get better:\", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"feedback-form\",\n      name: \"feedback\",\n      action: \"/feedback\",\n      method: \"post\",\n      \"data-netlify\": \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"form-name\",\n        value: \"feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"task-input form-input\",\n        name: \"feedback-text\",\n        id: \"feedback-text\",\n        cols: \"30\",\n        rows: \"3\",\n        ref: e => {\n          ref.current = e;\n        },\n        placeholder: \"Things I like... things I don't like... features I miss...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n        onClick: handleSubmit,\n        title: \"submit\",\n        size: \"large\",\n        type: \"submit\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-btn-hide\",\n      onClick: () => {\n        clickHandle();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(FeedbackOpen, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = FeedbackOpen;\nexport default Feedback;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Feedback\");\n$RefreshReg$(_c2, \"FeedbackOpen\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/Feedback/Feedback.js"],"names":["React","useState","useEffect","useRef","ButtonSmall","Feedback","feedbackOpen","setFeedbackOpen","clickHandle","feedbackIcon","FeedbackOpen","props","ref","current","focus","handleSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport \"./Feedback.css\";\nimport feedbackIcon from \"./feedback.svg\";\n\nfunction Feedback() {\n  const [feedbackOpen, setFeedbackOpen] = useState(false);\n\n  function clickHandle() {\n    setFeedbackOpen(false);\n  }\n\n  return (\n    <div className=\"feedback\">\n      {feedbackOpen ? (\n        <FeedbackOpen feedbackOpen={feedbackOpen} clickHandle={clickHandle} />\n      ) : (\n        <div\n          className=\"feedback-closed\"\n          onClick={() => {\n            setFeedbackOpen(true);\n          }}\n        >\n          <img\n            className=\"feedback-icon\"\n            src={feedbackIcon}\n            alt=\"Give feedback!\"\n          />\n          {\"Tried this? Give feedback!\"}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst FeedbackOpen = (props) => {\n  const { clickHandle } = props;\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const handleSubmit = (e) => {\n    clickHandle();\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"feedback-open\">\n      <h3 className=\"feedback-h3\">Hi! I'm still building this app.</h3>\n      Please leave your feedback to help it get better:\n      <form\n        className=\"feedback-form\"\n        name=\"feedback\"\n        action=\"/feedback\"\n        method=\"post\"\n        data-netlify=\"true\"\n      >\n        <input type=\"hidden\" name=\"form-name\" value=\"feedback\" />\n        <textarea\n          className=\"task-input form-input\"\n          name=\"feedback-text\"\n          id=\"feedback-text\"\n          cols=\"30\"\n          rows=\"3\"\n          ref={(e) => {\n            ref.current = e;\n          }}\n          placeholder=\"Things I like... things I don't like... features I miss...\"\n          required\n        ></textarea>\n        <ButtonSmall\n          onClick={handleSubmit}\n          title=\"submit\"\n          size=\"large\"\n          type=\"submit\"\n          color=\"red\"\n        />\n      </form>\n      <div\n        className=\"task-btn-hide\"\n        onClick={() => {\n          clickHandle();\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}