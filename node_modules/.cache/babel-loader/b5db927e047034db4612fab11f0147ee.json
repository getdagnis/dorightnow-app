{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/Sides/LeftSide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport TaskList from \"../TaskList/TaskList\";\nimport NewTask from \"../NewTask/NewTask\";\nimport { getTaskValue, getTaskCategory, getTaskType } from \"./LeftSide.helpers.js\";\n\nconst LeftSide = props => {\n  _s();\n\n  const {\n    tasks\n  } = props;\n  const [isNewTask, setIsNewTask] = useState(false);\n  const [allTasks, setTasks] = useState(tasks);\n  useEffect(() => {\n    localStorage.setItem(\"dorightnowTasks\", JSON.stringify(allTasks));\n  }, [allTasks]);\n\n  const addTask = () => {\n    const timestamp = Date.now(); // React Transition Group.mp4 tutorial\n\n    setTasks([...allTasks, {\n      id: timestamp,\n      task: getTaskValue(),\n      cat: getTaskCategory(),\n      type: getTaskType()\n    }]);\n  };\n\n  const removeItem = () => {// React Transition Group.mp4 tutorial\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isNewTask ? /*#__PURE__*/_jsxDEV(NewTask, {\n      clickHandle: () => {\n        setIsNewTask(!isNewTask);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"safari-flex-height-fix\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"side-top-h3 title-drop\",\n            children: \"Do today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => setIsNewTask(!isNewTask),\n            title: \"add new\",\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeftSide, \"z42amrpiEOI3bfnk1t/0U4YeU8Y=\");\n\n_c = LeftSide;\nexport default LeftSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSide\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/Sides/LeftSide.js"],"names":["React","useEffect","useState","ButtonSmall","TaskList","NewTask","getTaskValue","getTaskCategory","getTaskType","LeftSide","props","tasks","isNewTask","setIsNewTask","allTasks","setTasks","localStorage","setItem","JSON","stringify","addTask","timestamp","Date","now","id","task","cat","type","removeItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,WAHF,QAIO,uBAJP;;AAMA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,QAAD,EAAWC,QAAX,IAAuBb,QAAQ,CAACS,KAAD,CAArC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMM,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB,CADoB,CAEpB;;AACAR,IAAAA,QAAQ,CAAC,CACP,GAAGD,QADI,EAEP;AACEU,MAAAA,EAAE,EAAEH,SADN;AAEEI,MAAAA,IAAI,EAAEnB,YAAY,EAFpB;AAGEoB,MAAAA,GAAG,EAAEnB,eAAe,EAHtB;AAIEoB,MAAAA,IAAI,EAAEnB,WAAW;AAJnB,KAFO,CAAD,CAAR;AASD,GAZD;;AAcA,QAAMoB,UAAU,GAAG,MAAM,CACvB;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGhB,SAAS,gBACR,QAAC,OAAD;AACE,MAAA,WAAW,EAAE,MAAM;AACjBC,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,YADQ,GAMN,IAPN,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AACE,YAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF,CAD7B;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA5DD;;GAAMF,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport TaskList from \"../TaskList/TaskList\";\nimport NewTask from \"../NewTask/NewTask\";\nimport {\n  getTaskValue,\n  getTaskCategory,\n  getTaskType,\n} from \"./LeftSide.helpers.js\";\n\nconst LeftSide = (props) => {\n  const { tasks } = props;\n  const [isNewTask, setIsNewTask] = useState(false);\n  const [allTasks, setTasks] = useState(tasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"dorightnowTasks\", JSON.stringify(allTasks));\n  }, [allTasks]);\n\n  const addTask = () => {\n    const timestamp = Date.now();\n    // React Transition Group.mp4 tutorial\n    setTasks([\n      ...allTasks,\n      {\n        id: timestamp,\n        task: getTaskValue(),\n        cat: getTaskCategory(),\n        type: getTaskType(),\n      },\n    ]);\n  };\n\n  const removeItem = () => {\n    // React Transition Group.mp4 tutorial\n  };\n\n  return (\n    <React.Fragment>\n      {isNewTask ? (\n        <NewTask\n          clickHandle={() => {\n            setIsNewTask(!isNewTask);\n          }}\n        />\n      ) : null}\n      <div className=\"side left-side\">\n        <div className=\"safari-flex-height-fix\">\n          <div className=\"side-top\">\n            <h3 className=\"side-top-h3 title-drop\">Do today</h3>\n            <ButtonSmall\n              onClick={() => setIsNewTask(!isNewTask)}\n              title=\"add new\"\n              color=\"red\"\n            />\n          </div>\n        </div>\n        <TaskList tasks={tasks} />\n        {\n          // <div className=\"safari-flex-height-fix\">\n          //   <div className=\"side-top\">\n          //     <h3 className=\"side-top-h3\">Coming soon...</h3>\n          //     <ButtonSmall title=\"add new\" color=\"grey\" />\n          //   </div>\n          // </div>\n          // <TaskList tasks={tasks} />\n        }\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default LeftSide;\n"]},"metadata":{},"sourceType":"module"}