{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { TasksContext } from \"../../context/context\";\nimport Countdown from \"react-countdown\";\nimport ReactStopwatch from \"react-stopwatch\";\nimport \"./MainTask.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  _s();\n\n  const {\n    mainTask,\n    taskSize\n  } = props;\n  const {\n    state,\n    dispatch\n  } = useContext(TasksContext);\n  const {\n    mainTaskMovement\n  } = state;\n  const [animClass, setAnimClass] = useState(null);\n  console.log(mainTask);\n  let classList = \"main-task \" + taskSize;\n\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n\n    default:\n      return null;\n  }\n\n  const Completionist = () => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"You missed the deadline!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 31\n  }, this);\n\n  const countdownRenderer = ({\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(Completionist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countdown-units\",\n          children: [hours, \"h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countdown-units\",\n          children: [minutes, \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countdown-units\",\n          children: [seconds, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-task-h1\",\n        children: \"do right now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-task-with-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classList,\n          onClick: () => {\n            dispatch({\n              type: \"HIDE_LEFT_SIDE\",\n              payload: \"toggle\"\n            });\n            dispatch({\n              type: \"HIDE_RIGHT_SIDE\",\n              payload: \"toggle\"\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mainTask.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => {\n              dispatch({\n                type: \"CLEAR_MAIN_TASK\"\n              });\n              setTimeout(() => {\n                dispatch({\n                  type: \"HIDE_LEFT_SIDE\",\n                  payload: \"show\"\n                });\n                dispatch({\n                  type: \"HIDE_RIGHT_SIDE\",\n                  payload: \"show\"\n                });\n              }, 500);\n            },\n            size: \"extra-large\",\n            color: \"xxl-grey\",\n            title: \"give up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => {\n              dispatch({\n                type: \"MAIN_TASK_DONE\",\n                payload: {\n                  taskId: mainTask.id,\n                  action: \"done\"\n                }\n              });\n              setTimeout(() => {\n                dispatch({\n                  type: \"HIDE_LEFT_SIDE\",\n                  payload: \"show\"\n                });\n                dispatch({\n                  type: \"HIDE_RIGHT_SIDE\",\n                  payload: \"show\"\n                });\n              }, 500);\n            },\n            size: \"extra-large\",\n            color: \"xxl-red\",\n            title: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-bottom\",\n      children: [\"Time's running out!\", /*#__PURE__*/_jsxDEV(ReactStopwatch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n        className: \"countdown\",\n        date: Date.now() + 900000,\n        renderer: countdownRenderer,\n        controlled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainTask, \"Gj2rpJFRa8W+mYdsDMzcqKcFJSQ=\");\n\n_c = MainTask;\nexport default MainTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTask\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js"],"names":["React","useContext","useState","TasksContext","Countdown","ReactStopwatch","ButtonSmall","MainTask","props","mainTask","taskSize","state","dispatch","mainTaskMovement","animClass","setAnimClass","console","log","classList","concat","Completionist","countdownRenderer","hours","minutes","seconds","completed","type","payload","task","setTimeout","taskId","id","action","Date","now"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { TasksContext } from \"../../context/context\";\nimport Countdown from \"react-countdown\";\nimport ReactStopwatch from \"react-stopwatch\";\n\nimport \"./MainTask.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  const { mainTask, taskSize } = props;\n  const { state, dispatch } = useContext(TasksContext);\n  const { mainTaskMovement } = state;\n\n  const [animClass, setAnimClass] = useState(null);\n\n  console.log(mainTask);\n\n  let classList = \"main-task \" + taskSize;\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n    default:\n      return null;\n  }\n\n  const Completionist = () => <span>You missed the deadline!</span>;\n\n  const countdownRenderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Completionist />;\n    } else {\n      // Render a countdown\n      return (\n        <div className=\"countdown\">\n          <span className=\"countdown-units\">{hours}h</span>\n          <span className=\"countdown-units\">{minutes}m</span>\n          <span className=\"countdown-units\">{seconds}s</span>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"main-task-wrapper\">\n      <div className=\"main-task-top\">\n        <h1 className=\"main-task-h1\">do right now</h1>\n        <div className=\"main-task-with-btns\">\n          <div\n            className={classList}\n            onClick={() => {\n              dispatch({\n                type: \"HIDE_LEFT_SIDE\",\n                payload: \"toggle\",\n              });\n              dispatch({\n                type: \"HIDE_RIGHT_SIDE\",\n                payload: \"toggle\",\n              });\n            }}\n          >\n            <p>{mainTask.task}</p>\n          </div>\n          <div className=\"main-task-btns\">\n            <ButtonSmall\n              onClick={() => {\n                dispatch({\n                  type: \"CLEAR_MAIN_TASK\",\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: \"HIDE_LEFT_SIDE\",\n                    payload: \"show\",\n                  });\n                  dispatch({\n                    type: \"HIDE_RIGHT_SIDE\",\n                    payload: \"show\",\n                  });\n                }, 500);\n              }}\n              size=\"extra-large\"\n              color=\"xxl-grey\"\n              title=\"give up\"\n            />\n            <ButtonSmall\n              onClick={() => {\n                dispatch({\n                  type: \"MAIN_TASK_DONE\",\n                  payload: { taskId: mainTask.id, action: \"done\" },\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: \"HIDE_LEFT_SIDE\",\n                    payload: \"show\",\n                  });\n                  dispatch({\n                    type: \"HIDE_RIGHT_SIDE\",\n                    payload: \"show\",\n                  });\n                }, 500);\n              }}\n              size=\"extra-large\"\n              color=\"xxl-red\"\n              title=\"done\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"main-task-bottom\">\n        Time's running out!\n        <ReactStopwatch />\n        <Countdown\n          className=\"countdown\"\n          date={Date.now() + 900000}\n          renderer={countdownRenderer}\n          controlled={false}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MainTask;\n"]},"metadata":{},"sourceType":"module"}