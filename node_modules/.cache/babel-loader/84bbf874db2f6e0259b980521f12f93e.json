{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/Topbar/Topbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"../Menu/Menu\";\nimport \"./Topbar.css\";\nimport logo from \"./logo.svg\";\n\nfunction Topbar() {\n  _s();\n\n  let [isDark, setIsDark] = useState(localStorage.getItem(\"isAppDark\") === \"true\" || localStorage.getItem(\"isAppDark\") === \"false\" ? JSON.parse(localStorage.getItem(\"isAppDark\")) : true);\n  let [menuOpen, setMenuOpen] = useState(false);\n  let [isFirstPageView, setFirstPageView] = useState(true);\n  useEffect(() => {\n    // Picks a random background from an array based on a random number\n    // Best backgrounds shown more often\n    let combinedBodyClass = \"\";\n\n    if (!isFirstPageView) {\n      const randomNumber = Math.floor(Math.random() * 15);\n      const randomArray = [1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8];\n      const randomBackground = randomArray[randomNumber];\n      combinedBodyClass = isDark ? \"dark dark-bg\" + randomBackground : \"light light-bg\" + randomBackground;\n      document.body.classList = combinedBodyClass;\n      console.log(\"is NOT first view!\");\n      console.log(\"is not first and dark is:\", isDark);\n    } else {\n      console.log(\"is first view!\");\n      setFirstPageView(false);\n      combinedBodyClass = isDark ? \"dark dark-bg-1\" : \"light light-bg-1\";\n      console.log(\"isFirstPageView\", isFirstPageView);\n      console.log(\"is FIRST and dark is:\", isDark);\n    }\n\n    JSON.stringify(localStorage.setItem(\"isAppDark\", isDark));\n  }, [isDark]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"topbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-left\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"logo-link\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"Do Right Now logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: !isDark ? \"light-btn\" : \"dark-btn\",\n        onClick: () => setIsDark(!isDark)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setMenuOpen(!menuOpen),\n        className: \"burger-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hamburger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        handleClick: () => setMenuOpen(!menuOpen),\n        isOpen: menuOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Topbar, \"k0IbVUQZlnIqGeIxF+G94HQSEQs=\");\n\n_c = Topbar;\nexport default Topbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/Topbar/Topbar.js"],"names":["React","useEffect","useState","Link","Menu","Topbar","isDark","setIsDark","localStorage","getItem","JSON","parse","menuOpen","setMenuOpen","isFirstPageView","setFirstPageView","combinedBodyClass","randomNumber","Math","floor","random","randomArray","randomBackground","document","body","classList","console","log","stringify","setItem","logo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Menu from \"../Menu/Menu\";\nimport \"./Topbar.css\";\nimport logo from \"./logo.svg\";\n\nfunction Topbar() {\n  let [isDark, setIsDark] = useState(\n    localStorage.getItem(\"isAppDark\") === \"true\" ||\n      localStorage.getItem(\"isAppDark\") === \"false\"\n      ? JSON.parse(localStorage.getItem(\"isAppDark\"))\n      : true\n  );\n  let [menuOpen, setMenuOpen] = useState(false);\n  let [isFirstPageView, setFirstPageView] = useState(true);\n\n  useEffect(() => {\n    // Picks a random background from an array based on a random number\n    // Best backgrounds shown more often\n    let combinedBodyClass = \"\";\n\n    if (!isFirstPageView) {\n      const randomNumber = Math.floor(Math.random() * 15);\n      const randomArray = [1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8];\n      const randomBackground = randomArray[randomNumber];\n      combinedBodyClass = isDark\n        ? \"dark dark-bg\" + randomBackground\n        : \"light light-bg\" + randomBackground;\n      document.body.classList = combinedBodyClass;\n      console.log(\"is NOT first view!\");\n      console.log(\"is not first and dark is:\", isDark);\n    } else {\n      console.log(\"is first view!\");\n      setFirstPageView(false);\n      combinedBodyClass = isDark ? \"dark dark-bg-1\" : \"light light-bg-1\";\n      console.log(\"isFirstPageView\", isFirstPageView);\n      console.log(\"is FIRST and dark is:\", isDark);\n    }\n    JSON.stringify(localStorage.setItem(\"isAppDark\", isDark));\n  }, [isDark]);\n\n  return (\n    <nav className=\"topbar\">\n      <div className=\"top-left\">\n        <Link to=\"/\" className=\"logo-link\">\n          <img className=\"logo\" src={logo} alt=\"Do Right Now logo\" />\n        </Link>\n      </div>\n      <div className=\"top-center\"></div>\n      <div className=\"top-right\">\n        <button\n          className={!isDark ? \"light-btn\" : \"dark-btn\"}\n          onClick={() => setIsDark(!isDark)}\n        />\n        <div onClick={() => setMenuOpen(!menuOpen)} className=\"burger-wrapper\">\n          <div className=\"hamburger\"></div>\n        </div>\n        <Menu\n          handleClick={() => setMenuOpen(!menuOpen)}\n          isOpen={menuOpen}\n        ></Menu>\n      </div>\n    </nav>\n  );\n}\n\nexport default Topbar;\n"]},"metadata":{},"sourceType":"module"}