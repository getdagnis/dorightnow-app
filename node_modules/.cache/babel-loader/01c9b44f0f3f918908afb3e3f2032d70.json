{"ast":null,"code":"import uuid from \"uuid\";\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload\n      };\n      const addedTasks = [...state.tasks, newTask];\n      return { ...state,\n        tasks: addedTasks\n      };\n\n    case \"DELETE_TASK\":\n      const deletedTasks = state.tasks.filter(t => t.id !== action.payload);\n      return { ...state,\n        tasks: deletedTasks\n      };\n\n    case \"SET_CURRENT_TASK\":\n      return { ...state,\n        currentTask: action.payload\n      };\n\n    case \"UPDATE_TASK\":\n      const updatedTask = { ...state.currentTask,\n        text: action.payload\n      };\n      const updatedTasksIndex = state.tasks.findIndex(note => note.id === state.currentTask.id);\n      const updatedTasks = [...state.tasks.slice(0, updatedTasksIndex), updatedTask, ...state.tasks.slice(updatedTasksIndex + 1)];\n      return {\n        currentTask: null,\n        tasks: updatedTasks\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/context/reducer.js"],"names":["uuid","reducer","state","action","type","newTask","id","v4","task","payload","addedTasks","tasks","deletedTasks","filter","t","currentTask","updatedTask","text","updatedTasksIndex","findIndex","note","updatedTasks","slice"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEN,IAAI,CAACO,EAAL,EADU;AAEdC,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAFC,OAAhB;AAKA,YAAMC,UAAU,GAAG,CAAC,GAAGR,KAAK,CAACS,KAAV,EAAiBN,OAAjB,CAAnB;AAEA,aAAO,EACL,GAAGH,KADE;AAELS,QAAAA,KAAK,EAAED;AAFF,OAAP;;AAIF,SAAK,aAAL;AACE,YAAME,YAAY,GAAGV,KAAK,CAACS,KAAN,CAAYE,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASH,MAAM,CAACM,OAA1C,CAArB;AAEA,aAAO,EACL,GAAGP,KADE;AAELS,QAAAA,KAAK,EAAEC;AAFF,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGV,KADE;AAELa,QAAAA,WAAW,EAAEZ,MAAM,CAACM;AAFf,OAAP;;AAIF,SAAK,aAAL;AACE,YAAMO,WAAW,GAAG,EAClB,GAAGd,KAAK,CAACa,WADS;AAElBE,QAAAA,IAAI,EAAEd,MAAM,CAACM;AAFK,OAApB;AAKA,YAAMS,iBAAiB,GAAGhB,KAAK,CAACS,KAAN,CAAYQ,SAAZ,CACvBC,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYJ,KAAK,CAACa,WAAN,CAAkBT,EADhB,CAA1B;AAIA,YAAMe,YAAY,GAAG,CACnB,GAAGnB,KAAK,CAACS,KAAN,CAAYW,KAAZ,CAAkB,CAAlB,EAAqBJ,iBAArB,CADgB,EAEnBF,WAFmB,EAGnB,GAAGd,KAAK,CAACS,KAAN,CAAYW,KAAZ,CAAkBJ,iBAAiB,GAAG,CAAtC,CAHgB,CAArB;AAMA,aAAO;AACLH,QAAAA,WAAW,EAAE,IADR;AAELJ,QAAAA,KAAK,EAAEU;AAFF,OAAP;;AAIF;AACE,aAAOnB,KAAP;AA9CJ;AAgDD","sourcesContent":["import uuid from \"uuid\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      const newTask = {\n        id: uuid.v4(),\n        task: action.payload,\n      };\n\n      const addedTasks = [...state.tasks, newTask];\n\n      return {\n        ...state,\n        tasks: addedTasks,\n      };\n    case \"DELETE_TASK\":\n      const deletedTasks = state.tasks.filter((t) => t.id !== action.payload);\n\n      return {\n        ...state,\n        tasks: deletedTasks,\n      };\n    case \"SET_CURRENT_TASK\":\n      return {\n        ...state,\n        currentTask: action.payload,\n      };\n    case \"UPDATE_TASK\":\n      const updatedTask = {\n        ...state.currentTask,\n        text: action.payload,\n      };\n\n      const updatedTasksIndex = state.tasks.findIndex(\n        (note) => note.id === state.currentTask.id\n      );\n\n      const updatedTasks = [\n        ...state.tasks.slice(0, updatedTasksIndex),\n        updatedTask,\n        ...state.tasks.slice(updatedTasksIndex + 1),\n      ];\n\n      return {\n        currentTask: null,\n        tasks: updatedTasks,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}