{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm } from \"react-hook-form\";\nimport \"./TaskAdd.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport { TasksContext } from \"../../context/context\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\n\nfunction TaskAdd(props) {\n  _s();\n\n  let {\n    clickHandle\n  } = props; // Tutorial: https://www.youtube.com/watch?v=HERhqPlPyuY&list=PL_kAgwZgMfWx4JwTmreX_riVEor7jgnso\n  // Github: https://github.com/rivera1294/react-notes-app/tree/master/src/components\n\n  const {\n    state,\n    dispatch\n  } = useContext(TasksContext);\n  const [value, setValue] = useState(\"\"); // let ref = useRef();\n  // useEffect(() => {\n  //   ref.current.focus();\n  // });\n  // const handleChange = (event) => {\n  //   setValue(event.target.value);\n  // };\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (value.trim() === \"\") {\n  //     alert(\"Cannot add a blank task\");\n  //   } else {\n  //     dispatch({ type: \"ADD_TASK\", payload: value });\n  //     setValue(\"\");\n  //     clickHandle();\n  //   }\n  // };\n  // FORM HANDLING BY REACT-HOOK-FORM\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"no-tasks no-tasks-bigger\",\n        children: \"Add something to do...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task\",\n          name: \"Task\",\n          ref: register({\n            required: true,\n            max: 140,\n            min: 1,\n            maxLength: 140\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Motivation\",\n          name: \"Motivation\",\n          ref: register({\n            max: 32,\n            min: 1,\n            maxLength: 32\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Category\",\n          ref: register,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Do today\",\n            children: \"Do today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Do later\",\n            children: \"Do later\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Work\",\n            children: \"Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andis\",\n            children: \"Andis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M\\u0101rcis\",\n            children: \"M\\u0101rcis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"radio\",\n          value: \"none\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"radio\",\n          value: \"salmon\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"radio\",\n          value: \"olive\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"radio\",\n          value: \"blue\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"radio\",\n          value: \"gold\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"radio\",\n          value: \"purple\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: clickHandle,\n            title: \"Cancel\",\n            color: \"grey\",\n            size: isMobile ? \"btn-size-mobile\" : \"btn-size-large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            type: \"submit\",\n            title: \"Do later\",\n            color: \"grey\",\n            size: isMobile ? \"btn-size-mobile\" : \"btn-size-large\",\n            icon: turtleIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            type: \"submit\",\n            title: \"Do today\",\n            color: \"red\",\n            size: isMobile ? \"btn-size-mobile\" : \"btn-size-large\",\n            icon: quickIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskAdd, \"NWbs+AivKCM6+SPvQyw/GmB83v8=\", false, function () {\n  return [useForm];\n});\n\n_c = TaskAdd;\nexport default TaskAdd; // <div className=\"new-task-form\">\n// <form onSubmit={handleSubmit} action=\"\">\n//   <input\n//     type=\"text\"\n//     ref={ref}\n//     onChange={handleChange}\n//     value={value}\n//   />\n//   <button>Add task</button>\n// </form>\n// </div>\n// <textarea\n// name=\"task-text\"\n// id=\"task-text\"\n// placeholder=\"What do you want to do?\"\n// ></textarea>\n// <table className=\"task-table\">\n// <tbody>\n//   <tr>\n//     <td className=\"name-cell\">motivation:</td>\n//     <td>\n//       <div className=\"tags-main\" data-name=\"tags-input\">\n//         <input className=\"tags-input\" type=\"text\" />\n//       </div>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">cathegory:</td>\n//     <td>\n//       <select>\n//         <option value=\"15 minutes\" selected>\n//           No cathegories added\n//         </option>\n//       </select>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">color:</td>\n//     <td>\n//       <div className=\"color-cell\">\n//         <span\n//           id=\"grey-color\"\n//           className=\"pick-color grey-task active-color\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"blue-color\"\n//           className=\"pick-color cath-a\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"green-color\"\n//           className=\"pick-color cath-b\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"pink-color\"\n//           className=\"pick-color cath-c\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//       </div>\n//     </td>\n//   </tr>\n// </tbody>\n// </table>\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskAdd\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js"],"names":["React","useState","useContext","useRef","useEffect","isMobile","useForm","ButtonSmall","TasksContext","TaskAdd","props","clickHandle","state","dispatch","value","setValue","register","handleSubmit","errors","onSubmit","data","console","log","required","max","min","maxLength","turtleIcon","quickIcon"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,MAAI;AAAEC,IAAAA;AAAF,MAAkBD,KAAtB,CADsB,CAEtB;AACA;;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBX,UAAU,CAACM,YAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CALsB,CAOtB;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCZ,OAAO,EAAlD;;AACA,QAAMa,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,QAAQ,EAAED,YAAY,CAACE,QAAD,CAA5B;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,GAAG,EAAE,GAAvB;AAA4BC,YAAAA,GAAG,EAAE,CAAjC;AAAoCC,YAAAA,SAAS,EAAE;AAA/C,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,IAAI,EAAC,YAHP;AAIE,UAAA,GAAG,EAAEV,QAAQ,CAAC;AAAEQ,YAAAA,GAAG,EAAE,EAAP;AAAWC,YAAAA,GAAG,EAAE,CAAhB;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,GAAG,EAAEV,QAA7B;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAQ,YAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAqBE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBArBF,eA2BE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAiCE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,OAHR;AAIE,UAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBAjCF,eAuCE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBAvCF,eA6CE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAmDE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEO,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJf;AAAA;AAAA;AAAA;AAAA,gBAnDF,eAyDE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE,QAAC,WAAD;AACE,YAAA,OAAO,EAAEZ,WADX;AAEE,YAAA,KAAK,EAAC,QAFR;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,IAAI,EAAEN,QAAQ,GAAG,iBAAH,GAAuB;AAJvC;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,WAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,IAAI,EAAEA,QAAQ,GAAG,iBAAH,GAAuB,gBAJvC;AAKE,YAAA,IAAI,EAAEsB;AALR;AAAA;AAAA;AAAA;AAAA,kBAPF,eAcE,QAAC,WAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,KAAK,EAAC,KAHR;AAIE,YAAA,IAAI,EAAEtB,QAAQ,GAAG,iBAAH,GAAuB,gBAJvC;AAKE,YAAA,IAAI,EAAEuB;AALR;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDF,EA8ES,GA9ET;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqFE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YArFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyFD;;GAzHQnB,O;UA4BoCH,O;;;KA5BpCG,O;AA2HT,eAAeA,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm } from \"react-hook-form\";\n\nimport \"./TaskAdd.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport { TasksContext } from \"../../context/context\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\n\nfunction TaskAdd(props) {\n  let { clickHandle } = props;\n  // Tutorial: https://www.youtube.com/watch?v=HERhqPlPyuY&list=PL_kAgwZgMfWx4JwTmreX_riVEor7jgnso\n  // Github: https://github.com/rivera1294/react-notes-app/tree/master/src/components\n  const { state, dispatch } = useContext(TasksContext);\n  const [value, setValue] = useState(\"\");\n\n  // let ref = useRef();\n\n  // useEffect(() => {\n  //   ref.current.focus();\n  // });\n\n  // const handleChange = (event) => {\n  //   setValue(event.target.value);\n  // };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (value.trim() === \"\") {\n  //     alert(\"Cannot add a blank task\");\n  //   } else {\n  //     dispatch({ type: \"ADD_TASK\", payload: value });\n  //     setValue(\"\");\n  //     clickHandle();\n  //   }\n  // };\n  // FORM HANDLING BY REACT-HOOK-FORM\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data) => console.log(data);\n  console.log(errors);\n\n  return (\n    <React.Fragment>\n      <div className=\"new-task\">\n        <h2 className=\"no-tasks no-tasks-bigger\">Add something to do...</h2>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"text\"\n            placeholder=\"Task\"\n            name=\"Task\"\n            ref={register({ required: true, max: 140, min: 1, maxLength: 140 })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Motivation\"\n            name=\"Motivation\"\n            ref={register({ max: 32, min: 1, maxLength: 32 })}\n          />\n          <select name=\"Category\" ref={register}>\n            <option value=\"Do today\">Do today</option>\n            <option value=\"Do later\">Do later</option>\n            <option value=\"Home\">Home</option>\n            <option value=\"Work\">Work</option>\n            <option value=\"Andis\">Andis</option>\n            <option value=\"Mārcis\">Mārcis</option>\n          </select>\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value=\"none\"\n            ref={register({ required: true })}\n          />\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value=\"salmon\"\n            ref={register({ required: true })}\n          />\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value=\"olive\"\n            ref={register({ required: true })}\n          />\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value=\"blue\"\n            ref={register({ required: true })}\n          />\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value=\"gold\"\n            ref={register({ required: true })}\n          />\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value=\"purple\"\n            ref={register({ required: true })}\n          />\n          <div className=\"add-task-btns\">\n            <ButtonSmall\n              onClick={clickHandle}\n              title=\"Cancel\"\n              color=\"grey\"\n              size={isMobile ? \"btn-size-mobile\" : \"btn-size-large\"}\n            />\n            <ButtonSmall\n              type=\"submit\"\n              title=\"Do later\"\n              color=\"grey\"\n              size={isMobile ? \"btn-size-mobile\" : \"btn-size-large\"}\n              icon={turtleIcon}\n            />\n            <ButtonSmall\n              type=\"submit\"\n              title=\"Do today\"\n              color=\"red\"\n              size={isMobile ? \"btn-size-mobile\" : \"btn-size-large\"}\n              icon={quickIcon}\n            />\n          </div>{\" \"}\n        </form>\n      </div>\n      <div className=\"new-task-cover\"></div>\n    </React.Fragment>\n  );\n}\n\nexport default TaskAdd;\n\n// <div className=\"new-task-form\">\n// <form onSubmit={handleSubmit} action=\"\">\n//   <input\n//     type=\"text\"\n//     ref={ref}\n//     onChange={handleChange}\n//     value={value}\n//   />\n//   <button>Add task</button>\n// </form>\n// </div>\n\n// <textarea\n// name=\"task-text\"\n// id=\"task-text\"\n// placeholder=\"What do you want to do?\"\n// ></textarea>\n// <table className=\"task-table\">\n// <tbody>\n//   <tr>\n//     <td className=\"name-cell\">motivation:</td>\n//     <td>\n//       <div className=\"tags-main\" data-name=\"tags-input\">\n//         <input className=\"tags-input\" type=\"text\" />\n//       </div>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">cathegory:</td>\n//     <td>\n//       <select>\n//         <option value=\"15 minutes\" selected>\n//           No cathegories added\n//         </option>\n//       </select>\n//     </td>\n//   </tr>\n//   <tr>\n//     <td className=\"name-cell\">color:</td>\n//     <td>\n//       <div className=\"color-cell\">\n//         <span\n//           id=\"grey-color\"\n//           className=\"pick-color grey-task active-color\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"blue-color\"\n//           className=\"pick-color cath-a\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"green-color\"\n//           className=\"pick-color cath-b\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//         <span\n//           id=\"pink-color\"\n//           className=\"pick-color cath-c\"\n//           onclick=\"javascript:color();\"\n//         ></span>\n//       </div>\n//     </td>\n//   </tr>\n// </tbody>\n// </table>\n"]},"metadata":{},"sourceType":"module"}