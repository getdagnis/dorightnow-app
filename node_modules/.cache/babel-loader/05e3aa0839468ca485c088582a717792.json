{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskEdit/TaskEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { StateContext } from \"../../App\";\nimport Sides from \"../Sides/Sides\";\nimport { fetchedTasks } from \"../../tasks.js\";\nimport \"./TaskEdit.css\";\n\nfunction TaskEdit(props) {\n  _s();\n\n  const context = useContext(StateContext);\n  const id = props.match.params.id;\n  const thisTask = fetchedTasks.filter(t => {\n    return t.id == id;\n  });\n  const {\n    task,\n    cat,\n    type\n  } = thisTask[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello from TaskEdit...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"task: \", task]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"cat: \", cat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"type: \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"id: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sides, {\n      tasks: fetchedTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskEdit, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = TaskEdit;\nexport default TaskEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskEdit\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskEdit/TaskEdit.js"],"names":["React","useContext","StateContext","Sides","fetchedTasks","TaskEdit","props","context","id","match","params","thisTask","filter","t","task","cat","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,OAAO,GAAGN,UAAU,CAACC,YAAD,CAA1B;AACA,QAAMM,EAAE,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAMG,QAAQ,GAAGP,YAAY,CAACQ,MAAb,CAAqBC,CAAD,IAAO;AAC1C,WAAOA,CAAC,CAACL,EAAF,IAAQA,EAAf;AACD,GAFgB,CAAjB;AAGA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAsBL,QAAQ,CAAC,CAAD,CAApC;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BAAUG,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,4BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,6BAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,2BAAQR,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBQC,Q;;KAAAA,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { StateContext } from \"../../App\";\nimport Sides from \"../Sides/Sides\";\nimport { fetchedTasks } from \"../../tasks.js\";\nimport \"./TaskEdit.css\";\n\nfunction TaskEdit(props) {\n  const context = useContext(StateContext);\n  const id = props.match.params.id;\n\n  const thisTask = fetchedTasks.filter((t) => {\n    return t.id == id;\n  });\n  const { task, cat, type } = thisTask[0];\n\n  return (\n    <div>\n      <div>\n        <h3>Hello from TaskEdit...</h3>\n        <p>task: {task}</p>\n        <p>cat: {cat}</p>\n        <p>type: {type}</p>\n        <p>id: {id}</p>\n      </div>\n      <Sides tasks={fetchedTasks} />\n    </div>\n  );\n}\n\nexport default TaskEdit;\n"]},"metadata":{},"sourceType":"module"}