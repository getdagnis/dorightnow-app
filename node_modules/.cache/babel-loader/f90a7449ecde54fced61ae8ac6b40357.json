{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { TasksContext } from \"../../context/context\";\nimport \"./MainTask.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    mainTask,\n    taskSize\n  } = props;\n  const {\n    state,\n    dispatch\n  } = useContext(TasksContext);\n  const {\n    mainTaskMovement\n  } = state;\n  console.log(mainTask);\n  let classList = \"main-task \" + taskSize;\n\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n\n    default:\n      return null;\n  }\n\n  function mainTaskGiveUp() {\n    _s();\n\n    dispatch({\n      type: \"MAIN_TASK_DONE\",\n      payload: {\n        action: \"giveup\"\n      }\n    });\n    useTimeout(() => {\n      dispatch({\n        type: \"HIDE_LEFT_SIDE\",\n        payload: \"show\"\n      });\n      dispatch({\n        type: \"HIDE_RIGHT_SIDE\",\n        payload: \"show\"\n      });\n    }, 1000);\n  }\n\n  _s(mainTaskGiveUp, \"pjuR3MSHp7ghzmdWgPtbUiohl4E=\", true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-task-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-task-h1\",\n        children: \"do right now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-task-with-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classList,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mainTask.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => {\n              mainTaskGiveUp();\n            },\n            size: \"extra-large\",\n            color: \"xxl-grey\",\n            title: \"give up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            onClick: () => {\n              dispatch({\n                type: \"MAIN_TASK_DONE\",\n                payload: {\n                  taskId: mainTask.id,\n                  action: \"done\"\n                }\n              });\n            },\n            size: \"extra-large\",\n            color: \"xxl-red\",\n            title: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-task-bottom\",\n      children: \"Motivation comes here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MainTask, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\n_c = MainTask;\nexport default MainTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTask\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/MainTask/MainTask.js"],"names":["React","useContext","TasksContext","ButtonSmall","MainTask","props","mainTask","taskSize","state","dispatch","mainTaskMovement","console","log","classList","concat","mainTaskGiveUp","type","payload","action","useTimeout","task","taskId","id"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { TasksContext } from \"../../context/context\";\n\nimport \"./MainTask.css\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction MainTask(props) {\n  const { mainTask, taskSize } = props;\n  const { state, dispatch } = useContext(TasksContext);\n  const { mainTaskMovement } = state;\n\n  console.log(mainTask);\n\n  let classList = \"main-task \" + taskSize;\n  switch (mainTaskMovement) {\n    case \"in\":\n      classList = classList.concat(\" mainTaskIn\");\n      break;\n    case \"done\":\n      classList = classList.concat(\" mainTaskDone\");\n      break;\n    case \"out\":\n      classList = classList.concat(\" mainTaskOut\");\n      break;\n    default:\n      return null;\n  }\n\n  function mainTaskGiveUp() {\n    dispatch({\n      type: \"MAIN_TASK_DONE\",\n      payload: { action: \"giveup\" },\n    });\n    useTimeout(() => {\n      dispatch({\n        type: \"HIDE_LEFT_SIDE\",\n        payload: \"show\",\n      });\n      dispatch({\n        type: \"HIDE_RIGHT_SIDE\",\n        payload: \"show\",\n      });\n    }, 1000);\n  }\n\n  return (\n    <div className=\"main-task-wrapper\">\n      <div className=\"main-task-top\">\n        <h1 className=\"main-task-h1\">do right now</h1>\n        <div className=\"main-task-with-btns\">\n          <div className={classList}>\n            <p>{mainTask.task}</p>\n          </div>\n          <div className=\"main-task-btns\">\n            <ButtonSmall\n              onClick={() => {\n                mainTaskGiveUp();\n              }}\n              size=\"extra-large\"\n              color=\"xxl-grey\"\n              title=\"give up\"\n            />\n            <ButtonSmall\n              onClick={() => {\n                dispatch({\n                  type: \"MAIN_TASK_DONE\",\n                  payload: { taskId: mainTask.id, action: \"done\" },\n                });\n              }}\n              size=\"extra-large\"\n              color=\"xxl-red\"\n              title=\"done\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"main-task-bottom\">Motivation comes here...</div>\n    </div>\n  );\n}\n\nexport default MainTask;\n"]},"metadata":{},"sourceType":"module"}