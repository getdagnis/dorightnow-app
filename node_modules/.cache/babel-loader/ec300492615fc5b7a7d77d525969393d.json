{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm, FormProvider, useFieldArray } from \"react-hook-form\";\nimport { TasksContext } from \"../../context/context\";\nimport \"./TaskAdd.css\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction TaskAdd(props) {\n  _s();\n\n  let {\n    clickHandle,\n    taskEdit\n  } = props;\n  const {\n    dispatch\n  } = useContext(TasksContext);\n  const [showOptions, setShowOptions] = useState(false);\n  const showKeyboardTip = localStorage.getItem(\"showKeyboardTip\") === \"off\" ? false : true;\n  let ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }); // FORM HANDLING BY REACT-HOOK-FORM\n\n  const {\n    register,\n    control,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    append\n  } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n\n  const onSubmit = data => {\n    console.log(\"submit data\", data);\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: data\n    });\n    clickHandle();\n  };\n\n  console.log(\"task adding errors\", errors);\n\n  const handleUserKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onSubmit)();\n    }\n  };\n\n  function doLaterAction(e) {\n    console.log(\"do later event\", e); // handleSubmit(onSubmit)();\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"no-tasks no-tasks-bigger\",\n        children: \"Add something to do...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-task-form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea task-input\",\n          type: \"text\",\n          placeholder: \"Add a new task...\",\n          name: \"task\",\n          rows: \"3\",\n          onKeyPress: handleUserKeyPress,\n          ref: e => {\n            register(e, {\n              required: true,\n              max: 140,\n              min: 1,\n              maxLength: 600\n            });\n            ref.current = e;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), showOptions || taskEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-h3\",\n            children: \"Motivation to finish:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"task-input\",\n            autoComplete: \"off\",\n            type: \"text\",\n            placeholder: \"\\u20AC300, trip to Italy, avoid a punch in the face...\",\n            name: \"motivation\",\n            ref: register({\n              maxLength: 420\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-h3\",\n            children: \"Select a category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"task-input cat-select\",\n              name: \"category\",\n              ref: register,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"none\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"home\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"work\",\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"andis\",\n                children: \"Friends & Family\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-cat\",\n              children: \"Create New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-h3\",\n            children: \"Select color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-radio-btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio cat-0\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: \"0\",\n                ref: register,\n                defaultChecked: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio cat-a\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: \"a\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio cat-b\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: \"b\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio cat-c\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: \"c\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio cat-d\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: \"d\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio cat-e\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: \"e\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-options\",\n          onClick: () => {\n            setShowOptions(!showOptions);\n          },\n          children: \"+ Show optional details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-btns-left\",\n            children: /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: clickHandle,\n              title: \"Cancel\",\n              color: \"grey\",\n              size: isMobile ? \"mobile\" : \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-btns-right\",\n            children: taskEdit ? /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              type: \"submit\",\n              title: \"Save edited\",\n              color: \"red\",\n              size: isMobile ? \"mobile\" : \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n                onClick: () => {\n                  append({\n                    list: \"later\"\n                  });\n                  doLaterAction();\n                },\n                title: \"Do later\",\n                color: \"grey\",\n                size: isMobile ? \"mobile\" : \"large\",\n                icon: turtleIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonSmall // onClick={handleSubmit(onSubmit())}\n              , {\n                type: \"submit\",\n                title: \"Do today\",\n                color: \"red\",\n                size: isMobile ? \"mobile\" : \"large\",\n                icon: quickIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-cover\",\n      children: showKeyboardTip && !taskEdit ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-tip\",\n        children: \"Tip: Press \\\"N\\\" or \\\"Shift+N\\\" to open this form with your keyboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskAdd, \"I7OUJffyLh9seF2eevlKs0B4Iao=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = TaskAdd;\nexport default TaskAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskAdd\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js"],"names":["React","useContext","useRef","useState","useEffect","isMobile","useForm","FormProvider","useFieldArray","TasksContext","ButtonSmall","TaskAdd","props","clickHandle","taskEdit","dispatch","showOptions","setShowOptions","showKeyboardTip","localStorage","getItem","ref","current","focus","register","control","handleSubmit","errors","append","name","onSubmit","data","console","log","type","payload","handleUserKeyPress","e","key","shiftKey","doLaterAction","required","max","min","maxLength","list","turtleIcon","quickIcon"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm, FormProvider, useFieldArray } from \"react-hook-form\";\n\nimport { TasksContext } from \"../../context/context\";\nimport \"./TaskAdd.css\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\n\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction TaskAdd(props) {\n  let { clickHandle, taskEdit } = props;\n  const { dispatch } = useContext(TasksContext);\n  const [showOptions, setShowOptions] = useState(false);\n\n  const showKeyboardTip =\n    localStorage.getItem(\"showKeyboardTip\") === \"off\" ? false : true;\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  });\n\n  // FORM HANDLING BY REACT-HOOK-FORM\n  const { register, control, handleSubmit, errors } = useForm();\n\n  const { append } = useFieldArray({\n    control,\n    name: \"test\",\n  });\n\n  const onSubmit = (data) => {\n    console.log(\"submit data\", data);\n    dispatch({ type: \"ADD_TASK\", payload: data });\n    clickHandle();\n  };\n  console.log(\"task adding errors\", errors);\n\n  const handleUserKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onSubmit)();\n    }\n  };\n\n  function doLaterAction(e) {\n    console.log(\"do later event\", e);\n    // handleSubmit(onSubmit)();\n  }\n\n  return (\n    <FormProvider>\n      <div className=\"new-task\">\n        <h2 className=\"no-tasks no-tasks-bigger\">Add something to do...</h2>\n\n        <form className=\"new-task-form\" onSubmit={handleSubmit(onSubmit)}>\n          <textarea\n            className=\"textarea task-input\"\n            type=\"text\"\n            placeholder=\"Add a new task...\"\n            name=\"task\"\n            rows=\"3\"\n            onKeyPress={handleUserKeyPress}\n            ref={(e) => {\n              register(e, { required: true, max: 140, min: 1, maxLength: 600 });\n              ref.current = e;\n            }}\n          />\n          {showOptions || taskEdit ? (\n            <div>\n              <h3 className=\"form-h3\">Motivation to finish:</h3>\n              <input\n                className=\"task-input\"\n                autoComplete=\"off\"\n                type=\"text\"\n                placeholder=\"€300, trip to Italy, avoid a punch in the face...\"\n                name=\"motivation\"\n                ref={register({ maxLength: 420 })}\n              />\n              <h3 className=\"form-h3\">Select a category:</h3>\n              <div className=\"form-category\">\n                <select\n                  className=\"task-input cat-select\"\n                  name=\"category\"\n                  ref={register}\n                >\n                  <option value=\"none\">None</option>\n                  <option value=\"home\">Home</option>\n                  <option value=\"work\">Work</option>\n                  <option value=\"andis\">Friends & Family</option>\n                </select>\n                <div className=\"new-cat\">Create New</div>\n              </div>\n              <h3 className=\"form-h3\">Select color:</h3>\n              <div className=\"form-radio-btns\">\n                <span className=\"form-radio cat-0\">\n                  <input\n                    name=\"color\"\n                    type=\"radio\"\n                    value=\"0\"\n                    ref={register}\n                    defaultChecked\n                  />\n                </span>\n                <span className=\"form-radio cat-a\">\n                  <input name=\"color\" type=\"radio\" value=\"a\" ref={register} />\n                </span>\n                <span className=\"form-radio cat-b\">\n                  <input name=\"color\" type=\"radio\" value=\"b\" ref={register} />\n                </span>\n                <span className=\"form-radio cat-c\">\n                  <input name=\"color\" type=\"radio\" value=\"c\" ref={register} />\n                </span>\n                <span className=\"form-radio cat-d\">\n                  <input name=\"color\" type=\"radio\" value=\"d\" ref={register} />\n                </span>\n                <span className=\"form-radio cat-e\">\n                  <input name=\"color\" type=\"radio\" value=\"e\" ref={register} />\n                </span>\n              </div>\n            </div>\n          ) : (\n            <div\n              className=\"show-options\"\n              onClick={() => {\n                setShowOptions(!showOptions);\n              }}\n            >\n              + Show optional details\n            </div>\n          )}\n          <div className=\"add-task-btns\">\n            <div className=\"task-btns-left\">\n              <ButtonSmall\n                onClick={clickHandle}\n                title=\"Cancel\"\n                color=\"grey\"\n                size={isMobile ? \"mobile\" : \"large\"}\n              />\n            </div>\n            <div className=\"task-btns-right\">\n              {taskEdit ? (\n                <ButtonSmall\n                  type=\"submit\"\n                  title=\"Save edited\"\n                  color=\"red\"\n                  size={isMobile ? \"mobile\" : \"large\"}\n                />\n              ) : (\n                <>\n                  <ButtonSmall\n                    onClick={() => {\n                      append({ list: \"later\" });\n                      doLaterAction();\n                    }}\n                    title=\"Do later\"\n                    color=\"grey\"\n                    size={isMobile ? \"mobile\" : \"large\"}\n                    icon={turtleIcon}\n                  />\n                  <ButtonSmall\n                    // onClick={handleSubmit(onSubmit())}\n                    type=\"submit\"\n                    title=\"Do today\"\n                    color=\"red\"\n                    size={isMobile ? \"mobile\" : \"large\"}\n                    icon={quickIcon}\n                  />\n                </>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"new-task-cover\">\n        {showKeyboardTip && !taskEdit ? (\n          <p className=\"form-tip\">\n            Tip: Press \"N\" or \"Shift+N\" to open this form with your keyboard.\n          </p>\n        ) : null}\n      </div>\n    </FormProvider>\n  );\n}\n\nexport default TaskAdd;\n"]},"metadata":{},"sourceType":"module"}