{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/Task/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport \"./Task.css\";\nimport { TasksContext } from \"../../context/context\";\n\nconst Task = props => {\n  _s();\n\n  const [mobileTaskEditOpen, setMobileTaskEditOpen] = useState(false);\n  const {\n    task,\n    type,\n    cat,\n    delay,\n    id\n  } = props;\n  const categoryClasses = \"cat cat-\" + cat;\n  const catColor = cat ? cat : \"red\";\n  let taskClasses = \"task \" + type;\n  const {\n    dispatch\n  } = useContext(TasksContext); // Creates a bounce animation delay for each task seperately based on position in array\n\n  taskClasses = delay ? taskClasses.concat(\" delay-\" + delay) : taskClasses;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: taskClasses,\n    onClick: () => !mobileTaskEditOpen,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: categoryClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), type === \"todo\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-btns\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/task/\" + id,\n            state: {\n              task: task,\n              type: type,\n              cat: cat,\n              id: id\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonSmall, {\n            title: \"edit\",\n            color: \"grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSmall, {\n          title: \"do now\",\n          color: catColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => dispatch({\n          type: \"DELETE_TASK\",\n          payload: id\n        }),\n        className: \"task-btn-delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-btn-hide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"YR3UP5Bh5uewUo2yK4l3VDSODf4=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/Task/Task.js"],"names":["React","useContext","useState","useEffect","Link","ButtonSmall","TasksContext","Task","props","mobileTaskEditOpen","setMobileTaskEditOpen","task","type","cat","delay","id","categoryClasses","catColor","taskClasses","dispatch","concat","pathname","state","payload"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAiCP,KAAvC;AACA,QAAMQ,eAAe,GAAG,aAAaH,GAArC;AACA,QAAMI,QAAQ,GAAGJ,GAAG,GAAGA,GAAH,GAAS,KAA7B;AACA,MAAIK,WAAW,GAAG,UAAUN,IAA5B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAelB,UAAU,CAACK,YAAD,CAA/B,CAPsB,CAStB;;AACAY,EAAAA,WAAW,GAAGJ,KAAK,GAAGI,WAAW,CAACE,MAAZ,CAAmB,YAAYN,KAA/B,CAAH,GAA2CI,WAA9D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEA,WAAhB;AAA6B,IAAA,OAAO,EAAE,MAAM,CAACT,kBAA7C;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGC,IAAI,KAAK,MAAT,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAE;AACFS,YAAAA,QAAQ,EAAE,WAAWN,EADnB;AAEFO,YAAAA,KAAK,EAAE;AAAEX,cAAAA,IAAI,EAAEA,IAAR;AAAcC,cAAAA,IAAI,EAAEA,IAApB;AAA0BC,cAAAA,GAAG,EAAEA,GAA/B;AAAoCE,cAAAA,EAAE,EAAEA;AAAxC;AAFL,WADN;AAAA,iCAME,QAAC,WAAD;AAAa,YAAA,KAAK,EAAC,MAAnB;AAA0B,YAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AACE,QAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE,aAAR;AAAuBW,UAAAA,OAAO,EAAER;AAAhC,SAAD,CADzB;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAmBC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAvCD;;GAAMR,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\nimport \"./Task.css\";\nimport { TasksContext } from \"../../context/context\";\n\nconst Task = (props) => {\n  const [mobileTaskEditOpen, setMobileTaskEditOpen] = useState(false);\n  const { task, type, cat, delay, id } = props;\n  const categoryClasses = \"cat cat-\" + cat;\n  const catColor = cat ? cat : \"red\";\n  let taskClasses = \"task \" + type;\n\n  const { dispatch } = useContext(TasksContext);\n\n  // Creates a bounce animation delay for each task seperately based on position in array\n  taskClasses = delay ? taskClasses.concat(\" delay-\" + delay) : taskClasses;\n\n  return (\n    <div className={taskClasses} onClick={() => !mobileTaskEditOpen}>\n      <div className={categoryClasses}></div>\n      <p>{task}</p>\n      {type === \"todo\" ? (\n        <div className=\"task-edit\">\n          <div className=\"task-btns\">\n            <Link\n              to={{\n                pathname: \"/task/\" + id,\n                state: { task: task, type: type, cat: cat, id: id },\n              }}\n            >\n              <ButtonSmall title=\"edit\" color=\"grey\" />\n            </Link>\n            <ButtonSmall title=\"do now\" color={catColor} />\n          </div>\n          <div\n            onClick={() => dispatch({ type: \"DELETE_TASK\", payload: id })}\n            className=\"task-btn-delete\"\n          ></div>\n        </div>\n      ) : (\n        <div className=\"task-btn-hide\"></div>\n      )}\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}