{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { TasksContext } from \"../../context/context\";\nimport \"./TaskAdd.css\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction TaskAdd(props) {\n  _s();\n\n  let {\n    clickHandle,\n    taskEdit,\n    thisTask,\n    showTip\n  } = props;\n  const {\n    state,\n    dispatch\n  } = useContext(TasksContext);\n  const [showOptions, setShowOptions] = useState(false);\n  const {\n    categories,\n    colors\n  } = state;\n  const showKeyboardTip = localStorage.getItem(\"showKeyboardTip\") === \"off\" ? false : false; // TURNED OFF!!! FOR NOW...\n\n  let ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }, []); // FORM HANDLING BY REACT-HOOK-FORM\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(\"submit data\", data);\n    console.warn(\"errors\", errors);\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: data\n    });\n    dispatch({\n      type: \"SET_LAST_COLOR\",\n      payload: data.color\n    });\n    dispatch({\n      type: \"SET_LAST_CATEGORY\",\n      payload: data.category\n    });\n    clickHandle();\n  };\n\n  const onEdit = data => {\n    console.log(\"submit data\", data);\n    dispatch({\n      type: \"UPDATE_TASK\",\n      payload: {\n        data,\n        taskId: thisTask.id\n      }\n    });\n    clickHandle();\n  };\n\n  const handleUserKeyPress = e => {\n    if (!taskEdit && e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onSubmit)();\n    } else if (taskEdit && e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onEdit)();\n    }\n  };\n\n  const handleSelectCategory = e => {\n    if (e.target.value === \"add-new-cat\") {\n      alert(\"Sorry, doesn't work yet...\");\n    }\n  };\n\n  function doLaterAction(e) {\n    console.log(\"do later event\", e); // handleSubmit(onSubmit)();\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"no-tasks no-tasks-bigger\",\n        children: taskEdit ? \"Edit this task...\" : \"Add something to do...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-task-form\",\n        onSubmit: taskEdit ? handleSubmit(onEdit) : handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea task-input\",\n          type: \"text\",\n          placeholder: \"Add a new task...\",\n          name: \"task\",\n          rows: \"3\",\n          defaultValue: taskEdit ? thisTask.task : undefined,\n          onKeyPress: handleUserKeyPress,\n          ref: e => {\n            register(e, {\n              required: true,\n              max: 140,\n              min: 1,\n              maxLength: 600\n            });\n            ref.current = e;\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"form-h3\",\n          children: \"Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-radio-btns\",\n          children: colors.map(c => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-radio\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"color\",\n                type: \"radio\",\n                value: c.value,\n                ref: register,\n                defaultChecked: taskEdit ? c.value === thisTask.color : c.value === \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: c.class,\n                \"data-color\": c.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, c.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), !showOptions || taskEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-h3\",\n            children: \"Motivation (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"task-input\",\n            autoComplete: \"off\",\n            type: \"text\",\n            defaultValue: taskEdit ? thisTask.motivation : \"\",\n            onKeyPress: handleUserKeyPress,\n            placeholder: \"Motivation \\u20AC300, a trip to Italy, avoid a punch in the face...\",\n            name: \"motivation\",\n            ref: register({\n              maxLength: 420\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-h3\",\n            children: \"Category (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-category\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"task-input cat-select\",\n              name: \"category\",\n              ref: register,\n              onChange: handleSelectCategory,\n              children: [categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: c.name,\n                children: c.name\n              }, c.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"add-new-cat\",\n                children: \"+ Add a new category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-options\",\n          onClick: () => {\n            setShowOptions(!showOptions);\n          },\n          children: \"+ Show optional details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-task-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-btns-left\",\n            children: /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: clickHandle,\n              title: \"Cancel\",\n              color: \"grey\",\n              size: isMobile ? \"mobile\" : \"large-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-btns-right\",\n            children: taskEdit ? /*#__PURE__*/_jsxDEV(ButtonSmall, {\n              onClick: () => {\n                handleSubmit(onEdit)();\n              },\n              title: \"Save edited\",\n              color: \"red\",\n              size: isMobile ? \"mobile\" : \"large-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonSmall, {\n                onClick: () => {\n                  doLaterAction();\n                },\n                title: \"Do later\",\n                color: \"grey\",\n                size: isMobile ? \"mobile\" : \"large-icon\",\n                icon: turtleIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonSmall // onClick={handleSubmit(onSubmit())}\n              , {\n                type: \"submit\",\n                title: \"Do today\",\n                color: \"red\",\n                size: isMobile ? \"mobile\" : \"large-icon\",\n                icon: quickIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-cover\",\n      children: showKeyboardTip && showTip && !taskEdit ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-tip\",\n        children: \"Tip: Press \\\"N\\\" or \\\"Shift+N\\\" to open this form with your keyboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskAdd, \"qfxgHqQxyxUb/fYN8qcGIqA2ovU=\", false, function () {\n  return [useForm];\n});\n\n_c = TaskAdd;\nexport default TaskAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskAdd\");","map":{"version":3,"sources":["/Users/dagnis/Documents/Github/dorightnow-app/src/components/TaskAdd/TaskAdd.js"],"names":["React","useContext","useRef","useState","useEffect","isMobile","useForm","FormProvider","TasksContext","ButtonSmall","TaskAdd","props","clickHandle","taskEdit","thisTask","showTip","state","dispatch","showOptions","setShowOptions","categories","colors","showKeyboardTip","localStorage","getItem","ref","current","focus","register","handleSubmit","errors","onSubmit","data","console","log","warn","type","payload","color","category","onEdit","taskId","id","handleUserKeyPress","e","key","shiftKey","handleSelectCategory","target","value","alert","doLaterAction","task","undefined","required","max","min","maxLength","map","c","class","name","motivation","turtleIcon","quickIcon"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useForm, FormProvider } from \"react-hook-form\";\n\nimport { TasksContext } from \"../../context/context\";\nimport \"./TaskAdd.css\";\nimport turtleIcon from \"./turtle.svg\";\nimport quickIcon from \"./quick.svg\";\nimport ButtonSmall from \"../ButtonSmall/ButtonSmall\";\n\nfunction TaskAdd(props) {\n  let { clickHandle, taskEdit, thisTask, showTip } = props;\n  const { state, dispatch } = useContext(TasksContext);\n  const [showOptions, setShowOptions] = useState(false);\n\n  const { categories, colors } = state;\n\n  const showKeyboardTip =\n    localStorage.getItem(\"showKeyboardTip\") === \"off\" ? false : false; // TURNED OFF!!! FOR NOW...\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  // FORM HANDLING BY REACT-HOOK-FORM\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(\"submit data\", data);\n    console.warn(\"errors\", errors);\n    dispatch({ type: \"ADD_TASK\", payload: data });\n    dispatch({ type: \"SET_LAST_COLOR\", payload: data.color });\n    dispatch({ type: \"SET_LAST_CATEGORY\", payload: data.category });\n    clickHandle();\n  };\n\n  const onEdit = (data) => {\n    console.log(\"submit data\", data);\n    dispatch({\n      type: \"UPDATE_TASK\",\n      payload: { data, taskId: thisTask.id },\n    });\n    clickHandle();\n  };\n\n  const handleUserKeyPress = (e) => {\n    if (!taskEdit && e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onSubmit)();\n    } else if (taskEdit && e.key === \"Enter\" && !e.shiftKey) {\n      handleSubmit(onEdit)();\n    }\n  };\n\n  const handleSelectCategory = (e) => {\n    if (e.target.value === \"add-new-cat\") {\n      alert(\"Sorry, doesn't work yet...\");\n    }\n  };\n\n  function doLaterAction(e) {\n    console.log(\"do later event\", e);\n    // handleSubmit(onSubmit)();\n  }\n\n  return (\n    <FormProvider>\n      <div className=\"new-task\">\n        <h2 className=\"no-tasks no-tasks-bigger\">\n          {taskEdit ? \"Edit this task...\" : \"Add something to do...\"}\n        </h2>\n\n        <form\n          className=\"new-task-form\"\n          onSubmit={taskEdit ? handleSubmit(onEdit) : handleSubmit(onSubmit)}\n        >\n          <textarea\n            className=\"textarea task-input\"\n            type=\"text\"\n            placeholder=\"Add a new task...\"\n            name=\"task\"\n            rows=\"3\"\n            defaultValue={taskEdit ? thisTask.task : undefined}\n            onKeyPress={handleUserKeyPress}\n            ref={(e) => {\n              register(e, { required: true, max: 140, min: 1, maxLength: 600 });\n              ref.current = e;\n            }}\n            required\n          />\n          <h3 className=\"form-h3\">Color:</h3>\n          <div className=\"form-radio-btns\">\n            {colors.map((c) => {\n              return (\n                <span key={c.name} className=\"form-radio\">\n                  <input\n                    name=\"color\"\n                    type=\"radio\"\n                    value={c.value}\n                    ref={register}\n                    defaultChecked={\n                      taskEdit ? c.value === thisTask.color : c.value === \"0\"\n                    }\n                  />\n                  <span className={c.class} data-color={c.name}></span>\n                </span>\n              );\n            })}\n          </div>\n          {!showOptions || taskEdit ? (\n            <div>\n              <h3 className=\"form-h3\">Motivation (optional):</h3>\n              <input\n                className=\"task-input\"\n                autoComplete=\"off\"\n                type=\"text\"\n                defaultValue={taskEdit ? thisTask.motivation : \"\"}\n                onKeyPress={handleUserKeyPress}\n                placeholder=\"Motivation €300, a trip to Italy, avoid a punch in the face...\"\n                name=\"motivation\"\n                ref={register({ maxLength: 420 })}\n              />\n\n              <h3 className=\"form-h3\">Category (optional):</h3>\n              <div className=\"form-category\">\n                <select\n                  className=\"task-input cat-select\"\n                  name=\"category\"\n                  ref={register}\n                  onChange={handleSelectCategory}\n                >\n                  {categories.map((c) => (\n                    <option key={c.name} value={c.name}>\n                      {c.name}\n                    </option>\n                  ))}\n                  <option value=\"add-new-cat\">+ Add a new category</option>\n                </select>\n              </div>\n            </div>\n          ) : (\n            <div\n              className=\"show-options\"\n              onClick={() => {\n                setShowOptions(!showOptions);\n              }}\n            >\n              + Show optional details\n            </div>\n          )}\n          <div className=\"add-task-btns\">\n            <div className=\"task-btns-left\">\n              <ButtonSmall\n                onClick={clickHandle}\n                title=\"Cancel\"\n                color=\"grey\"\n                size={isMobile ? \"mobile\" : \"large-icon\"}\n              />\n            </div>\n            <div className=\"task-btns-right\">\n              {taskEdit ? (\n                <ButtonSmall\n                  onClick={() => {\n                    handleSubmit(onEdit)();\n                  }}\n                  title=\"Save edited\"\n                  color=\"red\"\n                  size={isMobile ? \"mobile\" : \"large-icon\"}\n                />\n              ) : (\n                <React.Fragment>\n                  <ButtonSmall\n                    onClick={() => {\n                      doLaterAction();\n                    }}\n                    title=\"Do later\"\n                    color=\"grey\"\n                    size={isMobile ? \"mobile\" : \"large-icon\"}\n                    icon={turtleIcon}\n                  />\n                  <ButtonSmall\n                    // onClick={handleSubmit(onSubmit())}\n                    type=\"submit\"\n                    title=\"Do today\"\n                    color=\"red\"\n                    size={isMobile ? \"mobile\" : \"large-icon\"}\n                    icon={quickIcon}\n                  />\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"new-task-cover\">\n        {showKeyboardTip && showTip && !taskEdit ? (\n          <p className=\"form-tip\">\n            Tip: Press \"N\" or \"Shift+N\" to open this form with your keyboard.\n          </p>\n        ) : null}\n      </div>\n    </FormProvider>\n  );\n}\n\nexport default TaskAdd;\n"]},"metadata":{},"sourceType":"module"}